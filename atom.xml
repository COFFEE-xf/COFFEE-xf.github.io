<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-05-19T03:58:35.002Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>谢斐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>软件设计师 知识点拾遗 面向对象技术</title>
    <link href="http://example.com/2025/05/19/note50/"/>
    <id>http://example.com/2025/05/19/note50/</id>
    <published>2025-05-19T03:03:59.000Z</published>
    <updated>2025-05-19T03:58:35.002Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 面向对象技术</h1><ol><li>2017年上半年第40题</li></ol><div class="center"><style>.kdwuycxruwtp{}</style><img src="/2025/05/19/note50/note50_pic01.png" class="kdwuycxruwtp"></div><p>  多态除了在编写过程中表现为子类可以重写父类方法之外，在调用方的表现即为<strong>只需基于父类或接口定义的方法进行调用，无需关心具体是哪个子类对象在执行</strong>。</p><hr><ol start="2"><li>2016年下半年第40题</li></ol><div class="center"><style>.sitjrrlfshqh{}</style><img src="/2025/05/19/note50/note50_pic03.png" class="sitjrrlfshqh"></div><p>  当激活状态是B且内嵌为状态B2时，如果发生事件e2,则转移到C3状态；如果当前激活状态B的子状态不是B2，<strong>则事件e2发生后，不激发状态转换</strong>。当激活状态为B时，不论内嵌状态是哪个，则发生事件e1后，激活状态转换到C1；或者B中内嵌的两个结束状态均达到时会离开状态 B。</p><hr><ol start="3"><li>2016年下半年第46题和47题</li></ol><div class="center"><style>.pbsjxuxoicic{}</style><img src="/2025/05/19/note50/note50_pic05.png" class="pbsjxuxoicic"></div><ul><li>生成器模式：生成器模式的特点是<strong>将对象的构造过程与其表示分离，使得同样的构建过程可以创建不同的表示</strong>，主要用于分步骤构建复杂对象。</li><li>工厂方法模式：在工厂方法模式当中，父类（抽象工厂）只声明创建方法而不关心具体实现，子类（具体工厂）负责实现父类的创建方法并返回具体的产品实例。</li><li>原型模式：原型模式的核心思想是通过复制现有对象（原型）来创建新对象，而不是通过new实例化。因此原型模式可以基于克隆快速生成对象，避免重复执行耗时的初始化操作。</li><li>单例模式：单例模式确保一个类中只有一个实例，并提供一个全局访问点。它通过控制实例化过程，避免重复创建对象，节省资源。</li></ul><hr><ol start="4"><li>2016年上半年第47题</li></ol><div class="center"><style>.buqmblqmqlai{}</style><img src="/2025/05/19/note50/note50_pic07.png" class="buqmblqmqlai"></div><ul><li>组合模式：组合模式将对象组合成树形结构以表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。</li><li>享元模式：享元模式运用共享技术有效地支持大量细粒度的对象，<strong>进而降低存储开销</strong>。</li><li>迭代器模式：迭代器提供一种方法顺序访问一个聚合对象中各个元素，而又不需暴露该对象的内部表示。</li><li>备忘模式：备忘在不破坏封装性的前提下，捕获一个对象的内部状态，并在对象之外保存这个状态。这样以后就可将对象恢复到原先保存的状态。</li></ul><hr><ol start="5"><li>2015年下半年第39题</li></ol><div class="center"><style>.xxcnxsgvtlzz{}</style><img src="/2025/05/19/note50/note50_pic08.png" class="xxcnxsgvtlzz"></div><p>  在UML类图中，继承关系用空心三角形+实线来表示。Car和Boat是Transport的子类。<strong>父类中move0方法为斜体，表示此类为抽象类，在子类中需要重置move0方法</strong>。</p><hr><ol start="6"><li>2015年上半年第38题</li></ol><div class="center"><style>.simmzluzufjk{}</style><img src="/2025/05/19/note50/note50_pic09.png" class="simmzluzufjk"></div><ul><li>面向对象分析：确定系统的功能、性能要求。</li><li>面向对象设计：设计分析模型和实现相应的源代码。</li><li>面向对象程序设计：<strong>选用一种面向对象程序设计语言</strong>，采用类、对象及其相关概念所进行的程序设计。</li></ul><hr><ol start="7"><li>2015年上半年第43题</li></ol><div class="center"><style>.iitmujklcvfe{}</style><img src="/2025/05/19/note50/note50_pic10.png" class="iitmujklcvfe"></div><p>  <strong>部署图用来显示系统中软件和硬件的物理架构</strong>。从部署图中可以了解到软件和硬件组件之间的物理关系以及处理结点的组件分布情况。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;style&gt;
.center 
{
  width: auto;
  display: table;
  margin-left: auto;
  margin-right: auto;
}
&lt;/style&gt;
&lt;h1&gt;软件设计师 知识点拾遗 面向对象技术&lt;/h1&gt;
&lt;ol&gt;
&lt;</summary>
      
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 2021年上半年</title>
    <link href="http://example.com/2025/05/18/note49/"/>
    <id>http://example.com/2025/05/18/note49/</id>
    <published>2025-05-18T07:54:08.000Z</published>
    <updated>2025-05-18T09:04:46.854Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 2021年上半年</h1><p>瓶颈期，依旧是20个</p><h2 id="上午题">上午题</h2><div class="center"><style>.pjlkiygccltz{}</style><img src="/2025/05/18/note49/note49_pic01.png" class="pjlkiygccltz"><div><p>  DMA方式传送数据时，数据直接在I/O设备与内存之间传输，无需CPU干预。<strong>每传送一个数据，DMA控制器需要占用一个​​存储周期来完成对内存的读写操作</strong>。其他选项与CPU执行指令或总线控制相关，而DMA的核心是绕过CPU直接访问内存，因此存储周期是最准确的描述。</p><hr><div class="center"><style>.ksypustsvour{}</style><img src="/2025/05/18/note49/note49_pic03.png" class="ksypustsvour"><div><p>  SQL注入攻击的核心是通过构造恶意的SQL输入，绕过应用程序的安全检查，直接操纵数据库，<strong>其​​首要目标​​是​​获取数据库的操作权限​</strong>​（如执行查询、删除数据等）。</p><hr><div class="center"><style>.iqfgzdwrojwv{}</style><img src="/2025/05/18/note49/note49_pic04.png" class="iqfgzdwrojwv"><div><p>  <strong>IPSec（Internet Protocol Security）是专门为​​IP数据报文​​提供加密、认证等安全服务的协议组</strong>，工作在网络层，可直接保护IP数据包的完整性和机密性。而HTTPS是加密HTTP流量的协议、TLS是加密TCP/UDP的协议。</p><hr><div class="center"><style>.fotwqjjuuhjd{}</style><img src="/2025/05/18/note49/note49_pic06.png" class="fotwqjjuuhjd"><table><thead><tr><th>阶段</th><th>目标</th><th>关键活动/输出物</th><th>相关工具/技术示例</th></tr></thead><tbody><tr><td><strong>1. 需求分析</strong></td><td>明确用户需求和系统功能</td><td>- 用户需求收集（访谈/问卷）<br>- 定义功能/非功能需求<br>- 输出《需求规格说明书》</td><td>JIRA, Confluence, 用户故事地图</td></tr><tr><td><strong>2. 系统设计</strong></td><td>规划系统架构和实现方案</td><td><strong>概要设计</strong>：<br>- 模块划分<br>- 技术栈选型<br><strong>详细设计</strong>：<br>- 数据结构/算法<br>- 数据库设计（ER图）</td><td>UML工具（Lucidchart）, Visio, ERMaster</td></tr><tr><td><strong>3. 编码实现</strong></td><td>将设计转化为可执行代码</td><td>- 编写代码<br>- 版本控制<br>- 单元测试</td><td>Git, VS Code, IntelliJ, JUnit/pytest</td></tr><tr><td><strong>4. 测试</strong></td><td>验证系统功能和质量</td><td>- 功能测试（黑盒）<br>- 性能测试<br>- 安全测试<br>- 用户验收测试（UAT）</td><td>Selenium, JMeter, OWASP ZAP, Postman</td></tr><tr><td><strong>5. 部署上线</strong></td><td>发布系统到生产环境</td><td>- 环境配置<br>- 自动化部署<br>- 数据迁移</td><td>Docker, Kubernetes, Jenkins, Ansible</td></tr><tr><td><strong>6. 运维与维护</strong></td><td>保障系统稳定运行并持续优化</td><td>- 性能监控<br>- Bug修复<br>- 功能迭代</td><td>Prometheus, ELK, Grafana, Sentry</td></tr></tbody></table><div><p>  其中，<strong>模块之间的接口设计属于概要设计的主要内容</strong>。</p><hr><div class="center"><style>.wwalxoesppvk{}</style><img src="/2025/05/18/note49/note49_pic08.png" class="wwalxoesppvk"><div><p>  <strong>先前的笔记中关于这一项的内容应该写错了</strong>，但是我没找到具体是在哪篇笔记里，在此特别订正一下。正确的面向对象分析的五大活动顺序应该为：</p><ol><li>认定对象</li><li>组织对象</li><li>描述对象间的相互作用</li><li>确定对象的操作</li><li>定义对象的内部信息</li></ol><hr><div class="center"><style>.jyfpiiendwpk{}</style><img src="/2025/05/18/note49/note49_pic09.png" class="jyfpiiendwpk"><div><ul><li>单一责任原则：就一个类而言，应该仅有一个引起它变化的原因。即，当需要修改某个类的时候原因有且只有一个，让一个类只做一种类型责任。</li><li>开放-封闭原则：软件实体应该是可以扩展的，即开放的；但是是不可修改的，即封闭的。</li><li>里氏替换原则：子类型必须能够替换掉他们的基类型。即，在任何父类可以出现的地方，都可以用子类的实例来赋值给父类型的引用。</li><li>依赖倒置原则：抽象不应该依赖于细节，细节应该依赖于抽象。即，高层模块不应该依赖于底层模块，二者都应该依赖于抽象。</li><li>接口分离原则：<strong>不应该强迫客户依赖于它们不用的方法。接口属于客户，不属于它所在的类层次。即，依赖于抽象，不依赖于具体，同时在抽象级别不应该有对细节的依赖</strong>。这样做的好处就在于可以最大限度地应对可能的变化。</li></ul><hr><div class="center"><style>.vnscsuxjsesa{}</style><img src="/2025/05/18/note49/note49_pic10.png" class="vnscsuxjsesa"><div><ul><li>41题：UML状态图用于对​<strong>​反应型对象</strong>​​的动态行为建模。</li><li>43题：这里混淆了状态和状态转换的概念，前者是指一个对象的稳定条件，是对象在某一时刻的静态属性。而<strong>状态转换才是由事件触发的</strong>，并导致对象从当前状态切换到新状态。</li></ul><hr><div class="center"><style>.edqfvxltirob{}</style><img src="/2025/05/18/note49/note49_pic11.png" class="edqfvxltirob"><div><ul><li>44题：<ul><li>命令模式：<strong>命令模式将请求封装为独立的对象</strong>（命令），允许用户参数化客户端（调用者）与接收者（执行者），从而支持请求的排队、撤销、日志记录等操作。</li><li>中介者模式：中介者模式的核心思想是“使用一个中介者来封装一系列对象之间的交互，使各个对象不需要显式地相互引用”，即通过引入中介对象来集中管理多个对象之间的交互，从而减少对象间的直接耦合，使系统更易于维护和扩展。</li></ul></li><li>45题：在UML类图当中，一个圆圈即为接口的意思，在上图中只在<strong>Operation</strong>中出现了。</li></ul><hr><div class="center"><style>.assnxebntvcs{}</style><img src="/2025/05/18/note49/note49_pic12.png" class="assnxebntvcs"><div><p>  使用线性探测法先求出关键字所在的位置，使用关键字key%m得出所存储的位置，如果遇到冲突则(key+di)%m的计算方式得到第二次关键字存储的位置，<strong>所以有可能第一个不是e的同义词</strong>。</p><hr><div class="center"><style>.wnwmxmjqsxbw{}</style><img src="/2025/05/18/note49/note49_pic14.png" class="wnwmxmjqsxbw"><div><p>  <strong>使用SMTP协议完成从客户端向服务器发送文件</strong>，使用POP3协议实现从客户端接收服务器的文件。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 结构化开发方法</title>
    <link href="http://example.com/2025/05/18/note48/"/>
    <id>http://example.com/2025/05/18/note48/</id>
    <published>2025-05-18T06:43:45.000Z</published>
    <updated>2025-05-18T07:05:57.541Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 结构化开发方法</h1><ol><li>2016年上半年第19题</li></ol><div class="center"><style>.gxnohwxbwcnn{}</style><img src="/2025/05/18/note48/note48_pic01.png" class="gxnohwxbwcnn"></div><p>软件体系结构图属于系统设计阶段的输出，用于定义模块划分、组件关系等高层结构，<strong>不属于需求分析阶段的直接产物</strong>。</p><hr><ol start="2"><li>2015年上半年第34题</li></ol><div class="center"><style>.ezsglewhdovs{}</style><img src="/2025/05/18/note48/note48_pic03.png" class="ezsglewhdovs"></div><p>​​桩程序​​是软件测试中的一种模拟组件，主要用于在​​模块测试​​或​​集成测试​​中替代尚未开发或不可用的依赖模块。例如当测试某个模块（A）时，如果它调用了另一个未完成的模块（B），可以用桩程序临时替代B，返回预设的测试数据，确保A能独立测试。<strong>而自底向上测试时显然不可能用到桩程序</strong>。</p><hr><ol start="3"><li>2014年下半年第15题</li></ol><div class="center"><style>.npgofuiiwmma{}</style><img src="/2025/05/18/note48/note48_pic04.png" class="npgofuiiwmma"></div><p>结构化方法​​在大规模、高复杂度项目中易出现​​模块间耦合高、灵活性不足​​的问题。而<strong>​面向对象方法​通过封装、继承、多态等特性更适应复杂需求，成为现代大规模项目的首选</strong>。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 软件工程基础知识</title>
    <link href="http://example.com/2025/05/17/note47/"/>
    <id>http://example.com/2025/05/17/note47/</id>
    <published>2025-05-17T09:44:41.000Z</published>
    <updated>2025-05-18T07:53:29.179Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 软件工程基础知识</h1><ol><li>2017年下半年第34题</li></ol><div class="center"><style>.qfnllgfsigir{}</style><img src="/2025/05/17/note47/note47_pic02.png" class="qfnllgfsigir"></div><p>  再来复习一下各种耦合的概念：</p><ul><li>无直接耦合：两个模块之间没有直接的关系。</li><li>数据耦合：两个模块之间存在简单的值传递。</li><li>标记耦合：两个模块之间存在<strong>数据结构</strong>的传递。</li><li>控制耦合：一个模块可以调用另一个模块中的某一个功能。</li><li>外部耦合：模块间通过软件之外的环境连接。</li><li>公共耦合：多个模块共享全局数据。</li><li>内容耦合：一个模块直接使用另一个模块的内部数据，或者一个模块通过非正常入口转入另一个模块内部。</li></ul><hr><ol start="2"><li>2017年上半年第17题和18题</li></ol><div class="center"><style>.lmdmunchnher{}</style><img src="/2025/05/17/note47/note47_pic03.png" class="lmdmunchnher"></div><p>  这道题目的要点在于第(18)题，要注意的是<strong>第几天</strong>开始。也就是说事件A的开始时间是第1天而非第0天。平常只注意项目完成时间的话可能会在这里犯错。</p><hr><ol start="3"><li>2017年上半年第29题</li></ol><div class="center"><style>.hrdworwhofyb{}</style><img src="/2025/05/17/note47/note47_pic04.png" class="hrdworwhofyb"></div><p>  螺旋模型是一种演化软件开发过程模型，它兼顾了快速原型的迭代特征以及瀑布模型的系统化与严格监控。螺旋模型最大的特点在于引入了其他模型不具备的风险分析，使软件在无法排除重大风险时有机会停止，以减小损失。同时，在每个迭代阶段构建原型是螺旋模型用以减小风险的途径。<strong>螺旋模型更适合大型、昂贵、系统级的软件应用</strong>。</p><hr><ol start="4"><li>2016年下半年第29题和30题</li></ol><div class="center"><style>.ussxkuwbnvmf{}</style><img src="/2025/05/17/note47/note47_pic06.png" class="ussxkuwbnvmf"></div><ul><li>瀑布模型：瀑布模型是将开发阶段描述为从一个阶段瀑布般转换到另一个阶段的过程。<strong>作为一种阶段顺序固定​​且​​强调文档驱动的模型，瀑布模型最大的问题就是难以适应动态变化的需求</strong>。</li><li>原型模型：在原型模型中，开发人员会快速地构造出整个系统或者系统的一部分以理解或澄清问题。</li><li>增量模型：增量模型是把软件产品作为一系列的增量构件来设计、编码、集成和测试，每个构件由相互作用的模块组成。</li><li>喷泉模型：喷泉模型开发过程中以用户需求为动力，以对象为驱动，适合于面向对象的开发方法。</li></ul><hr><ol start="5"><li>2016年下半年第36题</li></ol><div class="center"><style>.tcrtonfimhzo{}</style><img src="/2025/05/17/note47/note47_pic08.png" class="tcrtonfimhzo"></div><p>  这次来复习内聚的类型：</p><ul><li>偶然内聚：一个模块内的各个处理元素之间没有任何联系。</li><li>逻辑内聚：一个模块内执行若干个逻辑上相似的功能。</li><li>时间内聚：把需要同时执行的动作组合在一起形成的模块。</li><li>过程内聚：一个模块可以完成多个任务，且必须按照指定的过程执行。</li><li>通信内聚：<strong>模块内的所有处理元素都在同一个数据结构上操作</strong>。</li><li>顺序内聚：一个模块内的各个处理元素都密切相关于同一个过程且必须顺序执行，上一个元素的输出就是下一个元素的输入。</li><li>功能内聚：模块内的所有元素共同作用于完成同一个功能，缺一不可。</li></ul><hr><ol start="6"><li>2015年下半年第34题</li></ol><div class="center"><style>.rejwosiisdtv{}</style><img src="/2025/05/17/note47/note47_pic11.png" class="rejwosiisdtv"></div><p>  逆向工程这个概念比较好理解，就是对已有的代码、结构或者设计进行分析，恢复其逻辑或者文档。但是为什么是软件维护工具而不是软件开发工具呢？这是因为对工程进行逆向并不是从零开始的，而开发一定是从零开始的。</p><hr><ol start="7"><li>2015年上半年第16题</li></ol><div class="center"><style>.pkghlfitlzqx{}</style><img src="/2025/05/17/note47/note47_pic12.png" class="pkghlfitlzqx"></div><ul><li>概要：<strong>题目描述的&quot;分解为子系统&quot;、&quot;建立体系结构&quot;正是概要设计的核心任务</strong>。</li><li>详细：详细设计是在概要设计之后，主要进行模块内部的具体实现设计。</li><li>结构化：这是设计方法，不是设计阶段。</li><li>面向对象：这是编程范式，不是设计阶段。</li></ul><hr><ol start="8"><li>2015年上半年第19题</li></ol><div class="center"><style>.tibstvxvcioz{}</style><img src="/2025/05/17/note47/note47_pic13.png" class="tibstvxvcioz"></div><ul><li>风险影响：仅反映风险发生后可能造成的损失程度，但未考虑发生概率。</li><li>风险概率: 仅反映风险发生的可能性，但未考虑实际影响程度。</li><li>风险暴露：综合了风险影响和风险概率（通常计算公式：风险暴露=风险影响×风险概率），<strong>是设定优先级的科学依据</strong>。</li><li>风险控制：这是风险应对措施，而非优先级评估依据。</li></ul>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 操作系统知识</title>
    <link href="http://example.com/2025/05/17/note46/"/>
    <id>http://example.com/2025/05/17/note46/</id>
    <published>2025-05-17T07:06:32.000Z</published>
    <updated>2025-05-18T08:01:50.566Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 操作系统知识</h1><ol><li>2017年上半年第24题</li></ol><div class="center"><style>.jpwdddtbrrku{}</style><img src="/2025/05/17/note46/note46_pic02.png" class="jpwdddtbrrku"></div><p>  在有限的资源下，要保证系统不发生死锁，可以按照这种逻辑来分析：首先给每个进程分配所需资源数减一，然后再给系统保留一个资源，这种情况下是不可能发生死锁的。而对于本题来说，<strong>就是 3 × (5 - 1) + 1 = 13个资源</strong>。</p><hr><ol start="2"><li>2016年上半年第23题</li></ol><div class="center"><style>.bynuqajbbxzy{}</style><img src="/2025/05/17/note46/note46_pic03.png" class="bynuqajbbxzy"></div><p>  每当用户按下或者释放某一个键的时候，<strong>会产生一个中断</strong>，该中断激活键盘驱动程序KEYBOARD.DRV来对键盘中断进行处理。</p><hr><ol start="3"><li>2016年上半年第25题</li></ol><div class="center"><style>.cyfdvwwbvuoa{}</style><img src="/2025/05/17/note46/note46_pic04.png" class="cyfdvwwbvuoa"></div><p>  旋转延迟时间​​是指磁盘的盘片旋转到目标扇区所需的时间。当磁头移动到正确的磁道（寻道完成）后，需要等待目标扇区旋转到磁头下方才能开始读写数据，这段等待时间就是旋转延迟时间。</p><hr><ol start="3"><li>2014年下半年第28题</li></ol><div class="center"><style>.tzrjbhjkrqoy{}</style><img src="/2025/05/17/note46/note46_pic07.png" class="tzrjbhjkrqoy"></div><p>进程资源图能否化简取决于是否存在至少一个非阻塞进程，通过逐步模拟该进程获取资源、执行完成并释放资源的过程，若能最终移除所有进程，则图可化简；否则存在死锁。化简顺序应优先选择非阻塞进程或能解除最多阻塞的进程，必要时通过拓扑排序打破循环等待链。例如，若所有进程相互阻塞且无法释放资源，则系统处于死锁状态。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 2022年上半年部分并2021年下半年</title>
    <link href="http://example.com/2025/05/15/note45/"/>
    <id>http://example.com/2025/05/15/note45/</id>
    <published>2025-05-15T14:40:25.000Z</published>
    <updated>2025-05-17T06:30:54.526Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 2022年上半年部分并2021年下半年</h1><p>2022年的题做了30多道题之后才发现题不全，然后又重新做了下2021年下半年的题，今天错的是20个，又有一点进步~</p><h2 id="一、2022年上半年部分题">一、2022年上半年部分题</h2><div class="center"><style>.venoxstugigs{}</style><img src="/2025/05/15/note45/note45_pic01.png" class="venoxstugigs"></div><p>  不再赘述DRAM和SRAM的具体概念，要强调的是<strong>SRAM的功率要比DRAM更大</strong>，这是因为DRAM比SRAM更高的集成率使得其在相同容量下所用的芯片更少一些，降低了功率输出。</p><hr><div class="center"><style>.uzmiutoinioe{}</style><img src="/2025/05/15/note45/note45_pic02.png" class="uzmiutoinioe"></div><p>  首先，所谓的多级中断的含义是系统中存在多个不同优先级的中断源，当高优先级中断正在执行时，允许被更高优先级的中断打断，形成嵌套处理机制。因此，<strong>堆栈的“后进先出”特性完美匹配中断嵌套场景</strong>，每次中断只需压栈（PUSH）现场信息，返回时弹栈（POP）即可自动恢复。</p><hr><div class="center"><style>.xnzsihhqyqjk{}</style><img src="/2025/05/15/note45/note45_pic03.png" class="xnzsihhqyqjk"></div><ul><li>A选项，精简指令集的设计目标之一就是简化指令，<strong>使大多数指令能在​​单时钟周期​​内完成</strong>，提高执行效率。</li><li>B选项，由于在RISC中有更多的寄存器，因此硬布线控制器比较适合它；而CISC需要通过微代码解释复杂指令，所以普遍采用微程序控制器。</li><li>C选项，显而易见。</li><li>D选项，现代RISC和CISC架构<strong>均广泛采用​​流水线技术</strong>​​以提高指令吞吐量。</li></ul><hr><div class="center"><style>.jytgmrkynmmp{}</style><img src="/2025/05/15/note45/note45_pic04.png" class="jytgmrkynmmp"></div><ul><li>著作权：著作权的保护期一般为作者终生加上其死后的50年，<strong>不可延长</strong>。</li><li>专利权：发明专利保护期20年，实用新型/外观设计10年，均​<strong>​不可延长</strong>。</li><li>商标权：保护期10年，但​​可<strong>无限续展</strong>​​（每次续展延长10年），只需在到期前申请并缴纳费用。</li><li>商业秘密权：保护期理论上是​​永久的​​（只要信息保持秘密性），但一旦公开即失效，​<strong>​无需延长</strong>​​。</li></ul><hr><div class="center"><style>.fqlwkprjmgtj{}</style><img src="/2025/05/15/note45/note45_pic05.png" class="fqlwkprjmgtj"><table><thead><tr><th><strong>对比维度</strong></th><th><strong>边界值分析法</strong></th><th><strong>判定覆盖</strong></th></tr></thead><tbody><tr><td><strong>定义</strong></td><td>通过测试输入域的边界值及邻近值来发现错误。</td><td>确保程序中的每个逻辑判断（真/假）至少执行一次。</td></tr><tr><td><strong>核心目标</strong></td><td>验证边界条件的正确处理。</td><td>覆盖所有逻辑分支，保证条件完整性。</td></tr><tr><td><strong>典型示例</strong></td><td>测试&quot;年龄≥18&quot;时输入17、18、19。</td><td>测试<code>if (A &amp;&amp; B)</code>需覆盖A真/B真、A假/B假等组合。</td></tr><tr><td><strong>测试阶段</strong></td><td>黑盒测试</td><td>白盒测试</td></tr></tbody></table></div><hr><div class="center"><style>.jnhorttjraqs{}</style><img src="/2025/05/15/note45/note45_pic06.png" class="jnhorttjraqs"></div><p>  众所周知，视图是一个虚拟表，但是<strong>其中保存的是视图的查询逻辑，亦即视图定义</strong>，而非查询结果。视图每次会查询动态生成结果，数据字典不缓存结果，否则无法反映基表变化。</p><hr><div class="center"><style>.xykhcqmokupa{}</style><img src="/2025/05/15/note45/note45_pic07.png" class="xykhcqmokupa"></div><p>  经典记不清，在树中存在如下关系：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mo>+</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>n</mi><mn>3</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mrow><mo fence="true">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><msub><mi>n</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">n_0=1+n_2+2n_3+...+\left( m-1 \right) n_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">n_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表度为m的结点的个数。</p><h2 id="二、2021年下半年">二、2021年下半年</h2><div class="center"><style>.cgfvdqrymbeq{}</style><img src="/2025/05/15/note45/note45_pic09.png" class="cgfvdqrymbeq"></div><p>  当存在侵权行为时，赔偿责任通常仅由故意或者存在重大过失的侵权方承担，在本题中即由广大公司（经销商）承担，<strong>而鸿达公司这些善意使用者支付合理费用之后可以继续使用该软件</strong>。</p><hr><div class="center"><style>.thxargblvmbk{}</style><img src="/2025/05/15/note45/note45_pic12.png" class="thxargblvmbk"></div><p>  增量模型有以下不足之处：如果没有对用户的变更要求进行规划，那么产生的初始增量可能会造成后来增量的不稳定；如果需求不像早期思考的那样稳定和完整，那么一些增量就需要重新开发。<strong>综上所述，增量模型强调开发阶段性早期计划，并且有较高的系统管理成本</strong>。</p><hr><div class="center"><style>.eddmdxfhovky{}</style><img src="/2025/05/15/note45/note45_pic13.png" class="eddmdxfhovky"></div><p>  系统测试是软件测试的重要阶段，其目标是​​验证整个系统是否符合用户需求。因此，<strong>测试用例的设计必须基于​​需求分析阶段​​的输出</strong>，而非其他开发阶段的产物。</p><ul><li>概要设计：决定系统如何分解为模块，但系统测试关注的是整体功能，而非模块间交互（这是集成测试的范畴）。</li><li>详细设计：涉及具体算法或数据库设计，属于开发细节，系统测试不验证这些内容。</li><li>软件实现：代码是测试的执行对象，但测试目标仍需从需求中提取。</li></ul><hr><div class="center"><style>.wcqwbrtxfdwe{}</style><img src="/2025/05/15/note45/note45_pic14.png" class="wcqwbrtxfdwe"></div><ul><li>可行性研究报告：规划阶段核心文档，用于评估项目是否可行（用户需参与讨论）。</li><li>总体规划报告：规划阶段输出，明确系统目标和范围（用户需确认）。</li><li>项目开发计划：分析阶段可能制定初步开发计划（用户可能参与评审）。</li><li>用户使用手册：系统完成后编写，指导终端用户操作，​<strong>​不用于前期交流</strong>​​。</li></ul><hr><div class="center"><style>.shjmjbtsllje{}</style><img src="/2025/05/15/note45/note45_pic16.png" class="shjmjbtsllje"></div><p>  在面向对象当中，类之间的关系主要有以下4种，按耦合强度从弱到强排序：</p><ul><li>依赖：临时性使用，不具有长期持有关系。</li><li>关联：长期持有引用。</li><li>聚合：整体与部分可以独立存在。</li><li>组合：部分不可能脱离整体存在。</li></ul><p>  <em>注：本题答案众说纷纭，能够清晰认识概念即可。</em></p><hr><div class="center"><style>.tikqxexxfghz{}</style><img src="/2025/05/15/note45/note45_pic18.png" class="tikqxexxfghz"></div><p>  存储过程将SQL逻辑（如UPDATE user SET balance=…）隐藏在存储过程中，第三方仅调用sp_update_balance()，无需知道具体表名或字段。这样一来，可限制第三方直接操作表的权限，仅允许执行特定存储过程。也能避免SQL注入风险，且表结构变更时只需修改存储过程，不影响调用方。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 数据结构</title>
    <link href="http://example.com/2025/05/15/note44/"/>
    <id>http://example.com/2025/05/15/note44/</id>
    <published>2025-05-15T12:37:33.000Z</published>
    <updated>2025-05-15T13:23:09.844Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 数据结构</h1><ol><li>2015年下半年第64题和65题</li></ol><div class="center"><style>.bsblyjhgpuxh{}</style><img src="/2025/05/15/note44/note44_pic01.png" class="bsblyjhgpuxh"></div><ul><li><strong>插入排序</strong>：其工作原理是将数组分为已排序和未排序的两部分，逐个将未排序元素插入到已排序部分的正确位置上。这种排序方法适用于小规模数据或者<strong>基本有序</strong>的数据。</li><li><strong>归并排序</strong>：归并排序是分治法的典型案例，其基本过程如下所述：将待排序的线性表不断地切分为若干个子表，直到每个子表只包含一个元素，这时，可以认为这是一个有序表。随后将子表两两合并，每合并一次就会产生一个新的且更长的有序表，如此循环往复即完成了排序。归并排序一般用于对大规模且需要稳定排序的数据进行排序。</li><li><strong>快速排序</strong>：快速排序也是一种应用分治法的排序方式，它首先从数组中选取一个基准值（这一基准值通常是待划分数组的中位数），随后将数组重新排列，使得基准值左侧的元素全部小于它而其右侧的元素全部大于它。然后继续对左右两侧子数组分别重复上述过程，直到子数组长度为1或者0。快速排序适合对大规模乱序数据排序。</li><li><strong>计数排序</strong>：计数排序会统计每个关键字的出现次数，通过累加计数确定元素的位置。这一排序方法适用于<strong>关键字范围小且密集</strong>的数据。</li></ul><ol start="2"><li>2015年上半年第61题</li></ol><div class="center"><style>.rtcpjffdxyxs{}</style><img src="/2025/05/15/note44/note44_pic02.png" class="rtcpjffdxyxs"></div><p>  简单选择排序的基本方法是:①从待排序序列中，找到关键字最小的元素;②如果最小元素不是待排序序列的第一个元素，将其和第一个元素互换;③从余下的 N-1个元素中，找出关键字最小的元素，重复②步，直到排序结束。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络实验 配置IPv4静态路由和缺省路由</title>
    <link href="http://example.com/2025/05/15/note43/"/>
    <id>http://example.com/2025/05/15/note43/</id>
    <published>2025-05-15T12:06:43.000Z</published>
    <updated>2025-05-16T04:08:08.507Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>计算机网络实验 配置IPv4静态路由和缺省路由</h1><h2 id="一、要求文档">一、要求文档</h2><div class="center'><style>.jmlovknodxhs{}</style><style>.qekgdnkdfkcy{}</style><style>.lentlxeofldw{}</style><style>.jdqprjhwmbqh{}</style><style>.sgrjencvvbgy{}</style><style>.wmhcgofywmct{}</style><style>.qwqzvgyqcnft{}</style></div><h2 id="二、命令实现">二、命令实现</h2><h3 id="Part-2-基础设置配置">Part 2 基础设置配置</h3><h4 id="Step-2-路由器基础配置">Step 2 路由器基础配置</h4><p>  不再赘述，详情可以参见<a href="https://loquattree.xyz/2025/05/15/note42/">计算机网络实验 配置RIPv2动态网络</a></p><h4 id="Step-3-路由器IP配置">Step 3 路由器IP配置</h4><p>根据要求内容配置路由器的IP地址，以R3为例，执行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs text">R3#configure t<br>Enter configuration commands, one per line.  End with CNTL/Z.<br><br>R3(config-if)#interface s0/0/0<br>R3(config-if)#ip address 10.1.1.2 255.255.255.252<br>R3(config-if)#clock rate 128000<br>R3(config-if)#no shutdown<br><br>R3(config-if)#<br>%LINK-5-CHANGED: Interface Serial0/0/0, changed state to up<br><br>R3(config-if)#exit<br>R3(config)#<br>%LINEPROTO-5-UPDOWN: Line protocol on Interface Serial0/0/0, changed state to up<br><br>R3(config)#interface g0/1<br>R3(config-if)#ip address 192.168.1.1 255.255.255.0<br>R3(config-if)#no shutdown<br><br>R3(config-if)#<br>%LINK-5-CHANGED: Interface GigabitEthernet0/1, changed state to up<br><br>%LINEPROTO-5-UPDOWN: Line protocol on Interface GigabitEthernet0/1, changed state to up<br><br>R3(config-if)#exit<br><br>&lt;!-- 配置两个回环端口 --&gt;<br>R3(config)#interface loopback 0<br><br>R3(config-if)#<br>%LINK-5-CHANGED: Interface Loopback0, changed state to up<br><br>%LINEPROTO-5-UPDOWN: Line protocol on Interface Loopback0, changed state to up<br><br>R3(config-if)#ip address 209.165.200.225 255.255.255.224<br>R3(config-if)#no shutdown<br>R3(config-if)#interface loopback 1<br><br>R3(config-if)#<br>%LINK-5-CHANGED: Interface Loopback1, changed state to up<br><br>%LINEPROTO-5-UPDOWN: Line protocol on Interface Loopback1, changed state to up<br><br>R3(config-if)#ip address 198.133.219.1 255.255.255.0<br>R3(config-if)#no shutdown<br>R3(config-if)#end<br>R3#<br>%SYS-5-CONFIG_I: Configured from console by console<br><br>R3#wr<br>Building configuration...<br>[OK]<br></code></pre></td></tr></table></figure><h3 id="Part-3-配置静态路由">Part 3 配置静态路由</h3><h4 id="Step-1-配置递归静态路由">Step 1 配置递归静态路由</h4><p>以R1为例，执行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">R1#configure t<br>Enter configuration commands, one per line.  End with CNTL/Z.<br><br>&lt;!-- IP地址 子网掩码 下一跳IP地址 --&gt;<br>R1(config)#ip route 192.168.1.0 255.255.255.0 10.1.1.2<br></code></pre></td></tr></table></figure><h4 id="Step-2-配置直连静态路由">Step 2 配置直连静态路由</h4><p>以R3为例，执行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">R3#conf t<br>Enter configuration commands, one per line.  End with CNTL/Z.<br><br>&lt;!-- IP地址 子网掩码 出口端口名 --&gt;<br>R3(config)#ip route 192.168.0.0 255.255.255.0 s0/0/0<br>%Default route without gateway, if not a point-to-point interface, may impact performance<br></code></pre></td></tr></table></figure><p>此命令只在一个路由器执行即可，因为在简单的点对点连接中，单边配置静态路由即可实现双向通信，这是利用了路由器的直连路由特性和IP通信的对称性原理。</p><h3 id="Part-4-配置缺省路由">Part 4 配置缺省路由</h3><p>以R1为例，执行以下命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;!-- 缺省状态下前两个参数都是0.0.0.0 最后一个参数仍是下一跳地址 --&gt;<br>R1(config)#ip route 0.0.0.0 0.0.0.0 10.1.1.2<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">计算机网络实验命令行记录</summary>
    
    
    
    <category term="计算机网络" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="实验" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络实验 配置RIPv2动态网络</title>
    <link href="http://example.com/2025/05/15/note42/"/>
    <id>http://example.com/2025/05/15/note42/</id>
    <published>2025-05-15T08:49:14.000Z</published>
    <updated>2025-05-16T02:59:45.864Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>计算机网络实验 配置RIPv2动态网络</h1><h2 id="一、要求文档">一、要求文档</h2><div class="center"><style>.mykmcpcfejde{}</style><img src="/2025/05/15/note42/note42_pic01.jpg" class="mykmcpcfejde"><style>.epvbodvgyrxy{}</style><img src="/2025/05/15/note42/note42_pic02.jpg" class="epvbodvgyrxy"><style>.jddnrwqmrpiv{}</style><img src="/2025/05/15/note42/note42_pic03.jpg" class="jddnrwqmrpiv"><style>.uthldpihgccd{}</style><img src="/2025/05/15/note42/note42_pic04.jpg" class="uthldpihgccd"><style>.vtkhlkdnrxpe{}</style><img src="/2025/05/15/note42/note42_pic05.jpg" class="vtkhlkdnrxpe"><style>.ikzufvogrgik{}</style><img src="/2025/05/15/note42/note42_pic06.jpg" class="ikzufvogrgik"><style>.gtnzwfxubvwn{}</style><img src="/2025/05/15/note42/note42_pic07.jpg" class="gtnzwfxubvwn"><style>.jqvsdbkwukre{}</style><img src="/2025/05/15/note42/note42_pic08.jpg" class="jqvsdbkwukre"></div><h2 id="二、实验要点">二、实验要点</h2><p>  想象三个房间（R1、R2、R3），每个房间内的人（PC）只能和本房间的邮差（路由器）说话：</p><ul><li>​当​没有动态路由协议时​​：<br>  R1 邮差不知道 R3 房间有谁，PC-A 的信件无法送达 PC-C。<br>​</li><li>​启用 RIPv2 后​​：<br>  邮差们定期开会交换名单（路由表），R1 和 R3 互相知道对方房间有哪些人，信件顺利传递！</li></ul><p>  <strong>这就是配置RIPv2的作用所在。</strong></p><h2 id="三、命令实现">三、命令实现</h2><h3 id="1-Part-1-基础配置">1. Part 1 基础配置</h3><p><em>注：Step 1和Step 2的过程省略</em></p><h4 id="1）Step-3-配置路由器和交换机地址，以R1为例">1）Step 3 - 配置路由器和交换机地址，以R1为例</h4><p>  在每一个路由器中分别执行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;!-- 进入特权模式 --&gt;<br>Router&gt;enable<br>&lt;!-- 进入全局配置模式 --&gt;<br>Router#configure terminal<br><br>&lt;!-- a. 禁用DNS查询 --&gt;<br>&lt;!-- 能够避免输入无效命令时服务器会自动尝试进行域名解析 --&gt;<br>Router(config)#no ip domain-lookup<br><br>&lt;!-- b. 配置设备名称 --&gt;<br>Router(config)#hostname R1<br><br>&lt;!-- c. 将所有明文密码加密 --&gt;<br>R1(config)#service password-encryption<br><br>&lt;!-- d. 将class设置成特权EXEC的密码 --&gt;<br>R1(config)#enable secret class<br><br>&lt;!-- e1. 将cisco设置成线路配置模式的密码 --&gt;<br>R1(config)#line con 0<br>R1(config-line)#password cisco<br>R1(config-line)#login               &lt;!-- 启用密码提示，要求在控制台使用密码进行登录 --&gt;<br>R1(config-line)#logging Synchronous &lt;!-- 启用同步日志 --&gt;<br>R1(config-line)#exit<br><br>&lt;!-- e2. 将cisco设置成虚拟终端线路（VTY）的密码 --&gt;<br>R1(config)#line vty 0 4<br>R1(config-line)#password cisco<br>R1(config-line)#login<br>R1(config-line)#exit<br><br>&lt;!-- f. 设置一个MOTD警告信息 --&gt;<br>R1(config)#banner motd #Unauthorised access is prohibited!#<br><br>&lt;!-- g. 为线路配置模式启用同步日志 --&gt;<br>&lt;!-- 在e1中已经配置完毕 --&gt;<br><br>&lt;!-- h. 为所有接口配置地址表中的IP地址 --&gt;<br>R1(config)#interface g0/1<br>R1(config-if)#ip address 172.30.10.1 255.255.255.0<br>R1(config-if)#description Connection to S1 and PC-A &lt;!-- i. 配置IP地址对应的接口的描述信息 --&gt;<br>R1(config-if)#no shutdown                           &lt;!-- 启用端口 --&gt;<br><br>R1(config-if)#<br>%LINK-5-CHANGED: Interface GigabitEthernet0/1, changed state to up<br><br>%LINEPROTO-5-UPDOWN: Line protocol on Interface GigabitEthernet0/1, changed state to up<br><br>R1(config-if)#exit<br>R1(config)#<br>R1(config)#<br>R1(config)#interface s0/0/0<br>R1(config-if)#ip address 10.1.1.1 255.255.255.252<br>R1(config-if)#description Connection to R2 &lt;!-- i. 配置IP地址对应的接口的描述信息 --&gt;<br>R1(config-if)#clock rate 128000            &lt;!-- j. 为DCE串行接口配置时钟速率 --&gt;<br>R1(config-if)#no shutdown<br><br>%LINK-5-CHANGED: Interface Serial0/0/0, changed state to down<br>R1(config-if)#end<br>R1#<br>%SYS-5-CONFIG_I: Configured from console by console<br><br>R1#wr    &lt;!-- k. 复制run -configuration到startup-configuration --&gt;<br>Building configuration...<br>[OK]<br></code></pre></td></tr></table></figure><p>  完成以上配置之后，路由器之间应该能相互ping通，PC与对应的路由器端口应该能ping通，但PC之间不行。</p><p>  因为此时各个路由器的路由表中只包含了直连网络，但是在没有动态路由协议的情况下路由器之间无法交换信息，因此也就无法找到通往远程网络的路径。</p><blockquote><p>动态路由协议是一种​​自动学习和维护路由表​​的网络协议，允许路由器之间交换路由信息，并根据网络拓扑变化（如链路故障、新增子网）​​动态调整数据转发路径​​，无需管理员手动配置每一条路由。</p></blockquote><h3 id="2-Part-2-RIPv2路由配置">2. Part 2 RIPv2路由配置</h3><h4 id="1）Step-1-配置RIPv2路由，以R1为例">1）Step 1 配置RIPv2路由，以R1为例</h4><p>执行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs text">R1&gt;enable<br>Password: <br>R1#configure t<br>Enter configuration commands, one per line.  End with CNTL/Z.<br><br>R1(config)#router rip                 &lt;!-- 选择rip模式 --&gt;<br>R1(config-router)#version 2           &lt;!-- 选择RIPv2 --&gt;<br>R1(config-router)#network 10.1.1.0    &lt;!-- 配置第一个直连网络 --&gt;<br>R1(config-router)#network 172.30.10.0 &lt;!-- 配置另一个直连网络 --&gt;<br>R1(config-router)#no auto-summary     &lt;!-- 关闭自动汇总 --&gt;<br>R1(config-router)#end<br>R1#<br>%SYS-5-CONFIG_I: Configured from console by console<br><br>R1#wr<br>Building configuration...<br>[OK]<br><br>&lt;!-- --------------------------------------------------- --&gt;<br><br>&lt;!-- <br>注：<br>关于直连网络的具体信息，除了直接看拓扑图之外还可以根据命令分析：<br>依旧以R1为例，执行show ip interface brief命令<br><br>R1#show ip interface brief<br>Interface              IP-Address      OK? Method Status                Protocol <br>GigabitEthernet0/0     unassigned      YES unset  administratively down down <br>GigabitEthernet0/1     172.30.10.1     YES manual up                    up <br>Serial0/0/0            10.1.1.1        YES manual up                    up <br>Serial0/0/1            unassigned      YES unset  administratively down down <br>Vlan1                  unassigned      YES unset  administratively down down<br><br>其中出现的打开的几个网络就是直连网络的一个子网，据此可以分析出直连网络的参数。<br> --&gt;<br></code></pre></td></tr></table></figure><h4 id="2）Step-4-配置默认路由">2）Step 4 配置默认路由</h4><p>  在R2当中执行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs text">R2#configure t<br>Enter configuration commands, one per line.  End with CNTL/Z.<br><br>R2(config)#ip route 0.0.0.0 0.0.0.0 209.165.201.2  &lt;!-- 配置默认路由，其中最后一个地址是R2的下一跳地址 --&gt;<br>R2(config)#router rip                <br>R2(config-router)#default-information originate    &lt;!-- ​​将默认路由通告给其他运行 RIP 的路由器​​ --&gt;<br>R2(config-router)#end<br>R2#<br>%SYS-5-CONFIG_I: Configured from console by console<br><br>R2#wr<br>Building configuration...<br>[OK]<br></code></pre></td></tr></table></figure><p>  这样一来所有互联网流量就可以通过R2统一转发，便于监控和管理。而其它路由器也无需手动配置默认路由，可以通过RIP自动学习。<br>  此时PC之间也就可以ping通了。</p>]]></content>
    
    
    <summary type="html">计算机网络实验命令行记录</summary>
    
    
    
    <category term="计算机网络" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="实验" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%AE%9E%E9%AA%8C/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 2022年下半年</title>
    <link href="http://example.com/2025/05/14/note41/"/>
    <id>http://example.com/2025/05/14/note41/</id>
    <published>2025-05-14T12:47:20.000Z</published>
    <updated>2025-05-15T08:50:33.785Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 2022年下半年</h1><p>这次错了25个，略有进步~</p><h2 id="上午题">上午题</h2><div class="center"><style>.byebihwsxkrk{}</style><img src="/2025/05/14/note41/note41_pic01.png" class="byebihwsxkrk"></div><ul><li>DRAM：动态随机存取存储器，它<strong>使用电容存储信息</strong>，但由于电容会自然放电，因此<strong>需要定期刷新来保持数据</strong>。此外，DRAM也是内存的主要介质。</li><li>EPROM：可擦除可编程只读存储器，通过浮栅晶体管存储信息，无需刷新，但需紫外线擦除。</li><li>SRAM：静态随机存取存储器，使用触发器电路存储信息，无需刷新，速度快但成本高。此外，SRAM也是Cache的主要介质。</li><li>EEPROM：电可擦除可编程只读存储器，通过电子擦写存储信息，无需刷新，可逐字节修改。</li></ul><hr><div class="center"><style>.bwagilvgyabo{}</style><img src="/2025/05/14/note41/note41_pic02.png" class="bwagilvgyabo"></div><div class="center"><table><thead><tr><th>算法</th><th>类型</th><th>密钥长度（同等安全）</th><th>主要应用场景</th></tr></thead><tbody><tr><td>RSA</td><td>非对称</td><td>2048+ 位</td><td>HTTPS 证书、数字签名、<strong>X.509</strong></td></tr><tr><td>DES</td><td>对称</td><td>56 位（不安全）</td><td>历史遗留系统</td></tr><tr><td>AES</td><td>对称</td><td>128/192/256 位</td><td>文件加密、通信协议</td></tr><tr><td>ECC</td><td>非对称</td><td>256 位</td><td><strong>SM2 证书</strong>、区块链</td></tr></tbody></table></div><hr><div class="center"><style>.jqfrxdisvknh{}</style><img src="/2025/05/14/note41/note41_pic03.png" class="jqfrxdisvknh"></div><p>  三层C/S结构具体指的是表示层、功能层和数据层，这三层相互独立，可以分模块开发。此外，三层C/S结构聚友语言无关性，即<strong>各层可使用不同的开发语言</strong>，仅需通过接口进行通信。</p><hr><div class="center"><style>.nddbbwmuodzb{}</style><img src="/2025/05/14/note41/note41_pic04.png" class="nddbbwmuodzb"></div><p>  这个题做错的原因还是具体的概念有些记不清了，在这里来回顾一下：</p><ul><li>无直接耦合：两个模块之间没有直接的关系。</li><li>数据耦合：两个模块之间存在值传递。</li><li>标记耦合：两个模块之间存在数据结构的传递。</li><li>控制耦合：一个模块调用另一个模块中的某一功能。</li><li>外部耦合：模块间通过软件之外的环境连接。</li><li>公共耦合：多个模块<strong>共享全局数据</strong>。</li><li>内容耦合：一个模块直接使用另一个模块的内部数据，或者一个模块通过非正常入口转入另一个模块内部。</li></ul><p>  可以再顺便复习一下几种内聚的定义：</p><ul><li>偶然内聚：一个模块内的各个元素之间没有任何联系。</li><li>逻辑内聚：一个模块可以执行若干个逻辑上相似的功能。</li><li>时间内聚：模块中的任务或操作因为​​在同一时间段内执行​​而被组合在一起，但这些操作之间​​没有功能或逻辑上的直接关联​​。</li><li>过程内聚：一个模块能够完成多个任务，且这些任务必须按照指定的过程执行。</li><li>通信内聚：模块内所有的元素都在同一个数据结构上操作。</li><li>顺序内聚：一个模块内的各个处理元素都密切相关于完成一个功能且必须顺序执行。</li><li>功能内聚：一个模块内的所有元素都密切相关于完成一个功能，缺一不可。</li></ul><hr><div class="center"><style>.gfzeymagvsxy{}</style><img src="/2025/05/14/note41/note41_pic05.png" class="gfzeymagvsxy"></div><ul><li>冗余：同一数据在表中​​重复存储多次​​，浪费空间且易引发数据不一致。<strong>在本题中同一岗位的薪资会被重复存储。</strong></li><li>插入异常：无法插入某些合法数据，除非同时插入无关数据。<strong>在本题中若新增岗位时暂无教师，则薪资信息无法单独插入。</strong></li><li>删除异常：删除某些数据时，​​意外丢失其他信息​。<strong>在本题中如果删除某岗位的最后一名教师，则对应的薪资信息会丢失。</strong></li></ul><hr><div class="center"><style>.ocflpwakkcit{}</style><img src="/2025/05/14/note41/note41_pic06.png" class="ocflpwakkcit"></div><p>  这题也是记不清了，下面区分一下邻接矩阵和关联矩阵：</p><ul><li>邻接矩阵：设G为n阶图，V={<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">v_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">v_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, …, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">v_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>}，邻接矩阵A(G) = (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>)，其中：</li></ul><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>l</mi><mtext>，</mtext><msub><mi>v</mi><mi>i</mi></msub><mtext>与</mtext><msub><mi>v</mi><mi>j</mi></msub><mtext>之间的边数</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mtext>，</mtext><msub><mi>v</mi><mi>i</mi></msub><mtext>与</mtext><msub><mi>v</mi><mi>j</mi></msub><mtext>不邻接</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">a_{ij}=\left\{ \begin{array}{l}l\text{，}v_i\text{与}v_j\text{之间的边数}\\0\text{，}v_i\text{与}v_j\text{不邻接}\\\end{array} \right. </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord text"><span class="mord cjk_fallback">，</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">与</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">之间的边数</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord text"><span class="mord cjk_fallback">，</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">与</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">不邻接</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>  不难发现邻接矩阵是n个点之间的关系，故其矩阵的大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。</p><ul><li>关联矩阵：对应的，关联矩阵定义的是一个具有n个点和m条边的图的内容，故其矩阵大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n×m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>。</li></ul><hr><div class="center"><style>.wmaysoalglzx{}</style><img src="/2025/05/14/note41/note41_pic07.png" class="wmaysoalglzx"></div><p>记不清+1…，一棵B-树应该具有以下特点：</p><ul><li><strong>树中的每个结点至多有m颗子树</strong>。</li><li>若根节点不是叶子结点，则至少有两颗子树。</li><li>除根之外的所有非叶子结点至少有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil m/2 \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">m</span><span class="mord">/2</span><span class="mclose">⌉</span></span></span></span>棵子树。</li><li><strong>所有叶子结点都出现再同一层次上</strong>。</li><li><strong>B-树中的每个结点中的关键字都是有序的</strong>。</li></ul><hr><div class="center"><style>.tvbofosekvmq{}</style><img src="/2025/05/14/note41/note41_pic08.png" class="tvbofosekvmq"></div><div class="center"><style>.obnoopjsctjb{}</style><img src="/2025/05/14/note41/note41_pic09.png" class="obnoopjsctjb"></div><hr><div class="center"><style>.itxbqltkxsxw{}</style><img src="/2025/05/14/note41/note41_pic10.png" class="itxbqltkxsxw"></div><p>VLAN是在​​二层网络（<strong>数据链路层</strong>）​​中隔离广播域，通过插入​​802.1Q Tag​​标记不同VLAN的帧来实现的。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 程序语言基础知识</title>
    <link href="http://example.com/2025/05/14/note40/"/>
    <id>http://example.com/2025/05/14/note40/</id>
    <published>2025-05-14T06:58:02.000Z</published>
    <updated>2025-05-14T14:40:06.748Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 程序语言基础知识</h1><ol><li>2016年上半年第20题</li></ol><div class="center"><style>.jzqlkiektmse{}</style><img src="/2025/05/14/note40/note40_pic03.png" class="jzqlkiektmse"></div><p>  题目中出现的几个概念的具体内涵如下所示：</p><ul><li>编译程序：将整个源代码一次性翻译成目标代码的程序，可以生成一个独立的执行文件，在执行时无需源代码。</li><li>解释程序：逐行读取源代码，<strong>实时翻译并控制执行</strong>，不生成独立的目标文件。</li><li>编译方式：指通过编译程序处理代码的完整流程，即编译-&gt;链接-&gt;运行。其特点是效率高，因为运行时没有翻译的开销，但是跨平台需要重新编译。</li><li>解释方式：指通过解释程序直接执行源代码的流程，即逐行翻译+执行。和编译方式相对，解释方式的跨平台性能很好。</li></ul><p>  此外，需要了解的是，编译过程即<strong>词法分析</strong>（生成2元组）-&gt;<strong>语法分析</strong>（生成语法树）-&gt;<strong>语义分析</strong>（判断代码有无逻辑谬误）-&gt;<strong>中间代码生成</strong>（生成不依靠特定机器的中间表示）-&gt;<strong>代码优化</strong>-&gt;<strong>目标代码</strong>（针对于特定机器）生成6个阶段。</p><hr><ol start="2"><li>2016年上半年第21题</li></ol><div class="center"><style>.dqxowikzwfyu{}</style><img src="/2025/05/14/note40/note40_pic04.png" class="dqxowikzwfyu"></div><p>  脚本语言​​是一类语言的统称，这种语言具有以下特点：</p><div class="center"><table><thead><tr><th>特性</th><th>说明</th><th>示例（Python）</th></tr></thead><tbody><tr><td>解释执行</td><td><strong>通过解释器实时运行</strong>，不生成独立可执行文件</td><td><code>python script.py</code></td></tr><tr><td>动态类型</td><td>变量类型在运行时自动推断</td><td><code>x = 10</code>（无需声明<code>int x</code>）</td></tr><tr><td>胶水语言</td><td>可轻松调用其他程序或库（如Shell调用系统命令）</td><td><code>os.system(&quot;ls&quot;)</code></td></tr><tr><td>快速开发</td><td>语法简洁，适合小型项目或快速验证想法</td><td>用5行代码实现文件处理</td></tr><tr><td>跨平台性</td><td>依赖解释器而非硬件，同一脚本可在不同系统运行</td><td>Python脚本在Windows/Linux通用</td></tr></tbody></table></div><hr><ol start="3"><li>2015年上半年第22题</li></ol><div class="center"><style>.ymohgfsnmipj{}</style><img src="/2025/05/14/note40/note40_pic06.png" class="ymohgfsnmipj"></div><ul><li>代码区：存放函数体的二进制代码。</li><li>栈区：由编译器自动分配释放，存放函数的参数值、局部变量的值等。</li><li>堆区：一般由程序员分配释放，若程序员不释放，程序结束时可能由操作系统回收。</li><li>静态数据区：内存在程序启动的时候才被分配，而且可能直到程序开始执行的时候才被初始化，<strong>所分配的内存在程序的整个运行期间都存在</strong>，如<strong>全局变量</strong>、static变量等。</li></ul><hr><div class="center"><style>.eekcdsydusml{}</style><img src="/2025/05/14/note40/note40_pic07.png" class="eekcdsydusml"></div><p>目标代码生成阶段应考虑直接影响目标代码速度的三个问题：一是如何生成较短的目标代码；二是<strong>如何充分利用计算机中的寄存器</strong>，以减少目标代码访问存储单元的次数；三是如何充分利用计算机指令系统的特点，以提高目标代码的质量。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 计算机系统知识</title>
    <link href="http://example.com/2025/05/13/note39/"/>
    <id>http://example.com/2025/05/13/note39/</id>
    <published>2025-05-13T07:15:17.000Z</published>
    <updated>2025-05-13T12:35:35.583Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 计算机系统知识</h1><ol><li>2017年上半年第4题:</li></ol><div class="center"><style>.ilfwfopwzszm{}</style><img src="/2025/05/13/note39/note39_pic01.png" class="ilfwfopwzszm"></div><p>  部件并联时，一个硬件可靠整个硬件组就可靠，只有当所有部件都失效的时候硬件组才失效，那么其可靠度就是<code>1-（硬件的失效率）^硬件的个数</code>；而部件串联时，一个部件失效整个部件组都失效，那么其可靠度就是<code>硬件的可靠度^硬件的个数</code>。而对于本题而言就是B选项。</p><hr><ol start="2"><li>2017年下半年第6题:</li></ol><div class="center"><style>.qogrvoiwoohy{}</style><img src="/2025/05/13/note39/note39_pic02.png" class="qogrvoiwoohy"></div><p>  Cache存在的意义就是弥补内存和CPU之间的速度差异，显然<strong>需要位于主存和CPU之间，其内容为主存部分内容的拷贝，并不会扩大主存的容量</strong>。​​而Cache命中率是衡量CPU访问数据时在Cache中找到所需数据的概率，其随容量增大而提升，但受局部性原理限制，<strong>提升趋势非线性</strong>。</p><hr><ol start="3"><li>2016年下半年第1题:</li></ol><div class="center"><style>.yksyylffgtqj{}</style><img src="/2025/05/13/note39/note39_pic03.png" class="yksyylffgtqj"></div><p>  <strong>传统CPU根据指令周期的不同阶段来区分内存中存放的指令和数据</strong>，即在取指周期得到的是指令，在执行周期取出的是数据。</p><hr><ol start="4"><li>2016年下半年第3题:</li></ol><div class="center"><style>.sdmmumcgshpn{}</style><img src="/2025/05/13/note39/note39_pic04.png" class="sdmmumcgshpn"></div><p>  如果浮点数的阶码（包括一位阶符）用R位的移码表示，尾数（包括一位数符）用M位的补码表示，则浮点数表示的数值范围如下所示：</p><p>   最大正数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>M</mi><mo>+</mo><mn>1</mn></mrow></msup><mo fence="true">)</mo></mrow><mo>×</mo><msup><mn>2</mn><mrow><mo fence="true">(</mo><msup><mn>2</mn><mrow><mi>R</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">+\left( 1-2^{-M+1} \right) \times 2^{\left( 2^{R-1}-1 \right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1078em;"><span style="top:-3.4103em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span><br>   最大负数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><mo>×</mo><msup><mn>2</mn><mrow><mo fence="true">(</mo><msup><mn>2</mn><mrow><mi>R</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">-1\times 2^{\left( 2^{R-1}-1 \right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1078em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1078em;"><span style="top:-3.4103em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><hr><ol start="5"><li>2015年下半年第1题:</li></ol><div class="center"><style>.qnqqvhlncgnm{}</style><img src="/2025/05/13/note39/note39_pic06.png" class="qnqqvhlncgnm"></div><p>  对于DMA控制器向CPU提出的请求，CPU是在完成当前的<strong>总线周期</strong>后立即对此请求做出回应（总线周期通常指的是CPU完成一次访问存储器或I/O端口操作所需要的时间）。</p><hr><ol start="6"><li>2015年下半年第3题:</li></ol><div class="center"><style>.shmvfzywgyfi{}</style><img src="/2025/05/13/note39/note39_pic07.png" class="shmvfzywgyfi"></div><p>  浮点数表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><msup><mn>2</mn><mi>E</mi></msup><mo>×</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">N=2^E\times F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>，<strong>E为阶码，决定浮点数所能表示的数值范围</strong>；F为尾数，决定浮点数所能表示的数值精度。</p><hr><ol start="7"><li>2015年下半年第4题:</li></ol><div class="center"><style>.gdripcshfffm{}</style><img src="/2025/05/13/note39/note39_pic08.png" class="gdripcshfffm"></div><ul><li>隐含寻址：这种类型的指令，不是明显地给出操作数的地址，而是在指令中隐含着操作数的地址。</li><li>寄存器寻址：此时指令中给出的操作数地址不是内存的地址单元号，而是通用寄存器的编号。</li><li>立即寻址：<strong>指令的地址字段指出的不是操作数的地址，而是操作数本身</strong>。这时就不需要再访问内存取数了。</li><li>直接寻址：在指令格式的地址字段中直接指出操作数在内存的地址，由于操作数的地址直接给出而不需要经过某种变换，所以称这种寻址方式为直接寻址方式。</li></ul><hr><ol start="8"><li>2015年上半年第1题:</li></ol><div class="center"><style>.mlquhgmxxajq{}</style><img src="/2025/05/13/note39/note39_pic09.png" class="mlquhgmxxajq"></div><p>  通用寄存器​​是CPU内部的一种高速存储单元，由于其位于CPU内部，因此访问速度远高于其它几个部件。总的来说，<strong>题目中四种存储设备按访问速度排序为：通用寄存器 &gt; Cache &gt; 内存 &gt; 硬盘</strong>。</p><hr><ol start="10"><li>2015年上半年第6题:</li></ol><div class="center"><style>.gvxacwpjmksh{}</style><img src="/2025/05/13/note39/note39_pic12.png" class="gvxacwpjmksh"></div><p>  异步流水线是指，流水线输出端任务流出的顺序与输入端任务流入的顺序可以不同，允许后进入流水线的任务先完成。CPU 层次的东西，不会对上层产生结果性的影响，<strong>但乱序执行与分支预测会对程序的效率产生影响</strong>，因为每一次分支判错，都会丢弃计算的结果。</p><hr><ol start="11"><li>2014年下半年第1题:</li></ol><div class="center"><style>.xjilxsbthqyr{}</style><img src="/2025/05/13/note39/note39_pic13.png" class="xjilxsbthqyr"></div><p>  总线线路都可以被归为三类，即<strong>数据总线、地址总线和控制总线</strong>。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 知识点拾遗 2023年上半年</title>
    <link href="http://example.com/2025/05/12/note38/"/>
    <id>http://example.com/2025/05/12/note38/</id>
    <published>2025-05-12T11:52:55.000Z</published>
    <updated>2025-05-12T14:09:07.281Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 知识点拾遗 2023年上半年</h1><p>上午题错了28个，险过险过，主要还是好多去年学的概念记不清楚了，这几天还是要多刷题。</p><h2 id="上午题">上午题</h2><ol><li>第2题：</li></ol><div class="center"><style>.golhcdqosooz{}</style><img src="/2025/05/12/note38/note38_pic01.png" class="golhcdqosooz"></div><p>  DMA控制器即为直接内存访问控制器(Direct Memory Access, DMA)，它允许​​外设直接与<strong>主存</strong>交换数据​​，而​​无需CPU参与每次数据传输​​，从而解放CPU去执行其他任务。中断控制器同理。</p><ol start="2"><li>第3题：</li></ol><div class="center"><style>.dbivhtxrpgrf{}</style><img src="/2025/05/12/note38/note38_pic02.png" class="dbivhtxrpgrf"></div><p>  海明码是一种通过在数据位之间的特定位置上插入k个校验位，并据此扩大码距来实现检错和纠错功能的。设数据位是n位，校验位是k位，则n和k之间必须满足以下关系：</p><p class="katex-block "><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><mo>≥</mo><mi>n</mi><mo>+</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">2^k-1\ge n+k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9824em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span></p><p>将题目中的8代入n，解出<strong>k至少为4</strong>。</p><ol start="3"><li>第4题：</li></ol><div class="center"><style>.hownmghgxrqf{}</style><img src="/2025/05/12/note38/note38_pic03.png" class="hownmghgxrqf"></div><p>  中断向量​是计算机系统中用于​​快速定位中断处理程序（ISR, Interrupt Service Routine）的索引机制​​。它本质上是一个​​指针数组​​，其中每个向量存储了<strong>特定中断对应的处理程序的入口地址</strong>。当发生中断时，CPU通过中断向量表直接跳转到对应的ISR执行，无需手动查询。</p><ol start="4"><li>第7题：</li></ol><div class="center"><style>.pcmodoqjyymc{}</style><img src="/2025/05/12/note38/note38_pic04.png" class="pcmodoqjyymc"></div><div class="center"><table><thead><tr><th>OSI层数</th><th>名称</th><th>核心作用</th><th>典型协议/设备</th><th>数据传输单位</th></tr></thead><tbody><tr><td><strong>7</strong></td><td>应用层</td><td>提供用户接口，实现具体网络服务（如文件传输、邮件收发）。</td><td>HTTP, FTP, SMTP, DNS</td><td>数据（Data）</td></tr><tr><td><strong>6</strong></td><td>表示层</td><td>数据格式转换（编码/解码）、<strong>加密解密、压缩解压</strong>。</td><td>SSL/TLS, JPEG, MPEG</td><td>数据（Data）</td></tr><tr><td><strong>5</strong></td><td>会话层</td><td>建立、管理、终止应用程序间的会话（连接）。</td><td>NetBIOS, RPC, SIP</td><td>数据（Data）</td></tr><tr><td><strong>4</strong></td><td>传输层</td><td>提供端到端的可靠/不可靠传输，流量控制，错误校验。</td><td>TCP, UDP</td><td>段（Segment）</td></tr><tr><td><strong>3</strong></td><td>网络层</td><td>逻辑寻址（IP）、路由选择、分组转发。</td><td>IP, ICMP, OSPF, 路由器</td><td>包（Packet）</td></tr><tr><td><strong>2</strong></td><td>数据链路层</td><td>物理寻址（MAC）、帧同步、差错控制、流量控制（局域网通信）。</td><td>Ethernet, PPP, 交换机, 网桥</td><td>帧（Frame）</td></tr><tr><td><strong>1</strong></td><td>物理层</td><td>定义电气/机械特性，传输原始比特流（0和1）。</td><td>RS-232, 光纤, 网卡, 集线器</td><td>比特（Bit）</td></tr></tbody></table></div><ol start="5"><li>第8题：</li></ol><div class="center"><style>.wnbtjwlftprl{}</style><img src="/2025/05/12/note38/note38_pic05.png" class="wnbtjwlftprl"></div><p>  HTTPS 采用混合加密方式，即使用非对称加密算法和对称加密算法相结合的方式。整个握手过程中，服务器和客户端通过非对称加密算法进行通信，确认彼此身份后，再生成一个会话密钥，采用对称加密算法对后续的通信数据进行加密传输。<br>  因此，浏览器和服务器之间用于加密HTTP消息的方式是<strong>会话密钥 + 对称加密</strong>。</p><ol start="6"><li>第11题：</li></ol><div class="center"><style>.drlfwpgfxwfy{}</style><img src="/2025/05/12/note38/note38_pic06.png" class="drlfwpgfxwfy"></div><p>  Web 应用防火墙是一种安全工具，可以在 Web 应用程序和互联网之间建立一道屏障，防止恶意攻击者利用已知或未知的漏洞进行各种攻击操作。常见的攻击方式包括登录口令暴力破解、恶意注册、抢票机器人等。<br>  但是，<strong>流氓软件并非Web应用防火墙所能有效防护的范畴</strong>。流氓软件是指那些没有明确安装许可的、不良软件或广告软件，常常会通过欺骗、搭便车等方式侵入用户计算机系统，窃取用户信息或广告推销等。与Web应用防火墙不同，<strong>流氓软件需要通过杀毒软件、反恶意软件等安全工具来进行检测和清除</strong>。</p><ol start="7"><li>第14题：</li></ol><div class="center"><style>.csslmcmzaqso{}</style><img src="/2025/05/12/note38/note38_pic07.png" class="csslmcmzaqso"></div><p>  软件著作权属于自然人的，该自然人死亡后，在软件著作权的保护期内，软件著作权的继承人<strong>可以继承除署名权外的其他各项软件著作权</strong>。</p><ol start="8"><li>第16题：</li></ol><div class="center"><style>.mgkiqnrjdfwn{}</style><img src="/2025/05/12/note38/note38_pic08.png" class="mgkiqnrjdfwn"></div><p>  软件设计的一个基本原则是高内聚低耦合，过于集中的设计可能会导致系统的单点故障、性能瓶颈等问题，降低了系统的可靠性和可扩展性。</p><ol start="9"><li>第33题：</li></ol><div class="center"><style>.nxbhxywetiwb{}</style><img src="/2025/05/12/note38/note38_pic09.png" class="nxbhxywetiwb"></div><p>  管道—过滤器​​是一种经典的​​数据流驱动​​的软件架构风格，其核心思想是将系统拆分为一系列独立的处理单元（​​过滤器​​），这些单元通过​​管道​​连接，数据像水流一样在管道中传递，依次经过各个过滤器处理。该风格具有以下优点：</p><ul><li><strong>软件构件具有良好的隐蔽性和高内聚、低耦合的特点</strong>；</li><li>允许设计者将整个系统的输入输出行为看成是多个过滤器的行为的简单合成；</li><li><strong>支持软件复用</strong>；</li><li>系统维护和增强系统性能简单；</li><li>允许对一些如吞吐量、死锁等属性的分析；</li><li><strong>支持并行执行</strong>；</li></ul><ol start="10"><li>第41题和42题：</li></ol><div class="center"><style>.dkdnjsiuccug{}</style><img src="/2025/05/12/note38/note38_pic10.png" class="dkdnjsiuccug"></div><p>  <strong>UML图以时间顺序组织对象之间的交互活动</strong>；对于42题而言，矩形中存在一个循环Loop[1…2]，表示循环执行的次数最少一次最多两次，而矩形中的消息只有a和b，这意味着<strong>如果执行了c就不可能再执行a或者b，不执行a和b也不能执行c</strong>，因此选择C选项。</p><ol start="11"><li>第44题和45题：</li></ol><div class="center"><style>.krdqvujvowww{}</style><img src="/2025/05/12/note38/note38_pic11.png" class="krdqvujvowww"></div><p>  我们还是先来复习一下题目中提到的几个概念：</p><ul><li>单例：单例模式确保一个类中只有一个实例，并提供一个全局访问点。它通过控制实例化过程，避免重复创建对象，节省资源。</li><li>抽象工厂：和工厂方法模式当中创建单一产品不同的是，抽象工厂模式当中创建了一个产品家族，即一系列相关或相互依赖的的对象。</li><li>生成器：生成器模式的特点是将对象的构造过程与其表示分离，使得同样的构建过程可以创建不同的表示，主要用于分步骤构建复杂对象。</li><li>原型：原型模式的核心思想是通过复制现有对象（原型）来创建新对象，而不是通过new实例化。因此原型模式可以基于克隆快速生成对象，避免重复执行耗时的初始化操作。</li><li>行为型：管理对象间的交互与职责分配。</li><li>结构型：通过组合类/对象形成更大结构。</li><li>创建型：对象创建机制，解耦客户端与实例化逻辑。</li></ul><p>  则不难看出题目中的是创建型设计模式中的原型设计模式，<strong>这一模式的主要思想是通过复制现有的对象来创建新的对象</strong>。</p><ol start="12"><li>第46题和47题：</li></ol><div class="center"><style>.neomhreiussk{}</style><img src="/2025/05/12/note38/note38_pic12.png" class="neomhreiussk"></div><p>  依旧是复习一下提到的几个概念：</p><ul><li>策略模式：策略模式是一种将算法抽离出来的设计模式，它定义一系列算法（策略）​​，并将每个算法封装成独立类，使它们可以​​互相替换​​，且算法的变化不影响使用它的客户端。</li><li>状态模式：状态模式的核心为：同一个动作在不同状态下有不同的表现。例如日常用的台灯，正常状态下按开关出现的是白光，护眼模式下同样按开关出现的却是黄光。</li><li>观察者模式：在观察者模式当中定义了对象间的一对多依赖关系，当一个对象（主题）状态改变时，所有依赖它的对象（观察者）都会自动收到通知并更新。</li><li>命令模式：命令模式将请求封装为独立的对象（命令），允许用户参数化客户端（调用者）与接收者（执行者），从而支持请求的排队、撤销、日志记录等操作。</li></ul><p>  对于旅游定价系统来说，不同的季节和节假日需要采取不同的定价策略，因此可以把<strong>不同的定价策略封装成独立的策略对象</strong>，并通过<strong>策略模式</strong>实现动态选择不同的策略。</p><ol start="13"><li>第53题和54题：</li></ol><div class="center"><style>.dgbyvvmwqetu{}</style><img src="/2025/05/12/note38/note38_pic14.png" class="dgbyvvmwqetu"></div><p>  要确定关系模式中的候选关键字，需满足以下条件：</p><ul><li>闭包覆盖性​​：候选关键字的闭包（通过函数依赖集推导出的属性集合）必须包含所有属性（即等于属性集U）。</li><li>最小性​​：候选关键字不能有冗余属性（即去掉任一属性后，闭包不再覆盖U）。</li></ul><p>  对于本题而言，只有关键字ABD和关键字ACD的闭包满足以上要求，<strong>故关系模式R有两个候选关键字ABD和ACD</strong>。<br>  而主属性指的是所有候选关键字中的属性，非主属性则不包含在任何候选关键字中。那么不难发现A、B、C、D均为主属性，则<strong>主属性和非主属性的个数分别为4和0</strong>。</p>]]></content>
    
    
    <summary type="html">软考真题做题笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    <category term="知识点拾遗" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%8B%BE%E9%81%97/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师 备考笔记汇总页</title>
    <link href="http://example.com/2025/05/10/guide01/"/>
    <id>http://example.com/2025/05/10/guide01/</id>
    <published>2025-05-10T14:24:48.000Z</published>
    <updated>2025-05-14T01:51:29.684Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>软件设计师 软件设计师 备考笔记汇总页</h1><h3 id="上午题">上午题</h3><ul><li><a href="https://loquattree.xyz/2025/04/20/note24/">软件设计师 上午题 计算机系统</a></li><li><a href="https://loquattree.xyz/2025/04/22/note25/">软件设计师 上午题 程序设计语言</a></li><li><a href="https://loquattree.xyz/2025/04/23/note26/">软件设计师 上午题 知识产权</a></li><li><a href="https://loquattree.xyz/2025/04/23/note27/">软件设计师 上午题 数据库</a></li><li><a href="https://loquattree.xyz/2025/04/24/note30/">软件设计师 上午题 UML</a></li><li><a href="https://loquattree.xyz/2025/04/27/note32/">软件设计师 上午题 设计模式</a></li><li><a href="https://loquattree.xyz/2025/04/28/note33/">软件设计师 上午题 操作系统知识</a></li><li><a href="https://loquattree.xyz/2025/05/08/note34/">软件设计师 上午题 结构化开发</a></li><li><a href="https://loquattree.xyz/2025/05/08/note35/">软件设计师 上午题 软件工程</a></li><li><a href="https://loquattree.xyz/2025/05/09/note37/">软件设计师 上午题 网络与信息安全基础知识</a></li></ul><h3 id="下午题">下午题</h3><ul><li><a href="https://loquattree.xyz/2025/04/23/note28/">软件设计师 下午题 试题一 数据流图设计</a></li><li><a href="https://loquattree.xyz/2025/04/23/note29/">软件设计师 下午题 试题二 数据库设计</a></li><li><a href="https://loquattree.xyz/2025/04/26/note31/">软件设计师 下午题 试题三 UML分析与设计</a></li></ul><h3 id="拾遗">拾遗</h3><ul><li><a href="https://loquattree.xyz/2025/05/13/note39/">软件设计师 知识点拾遗 计算机系统知识</a></li><li><a href="https://loquattree.xyz/2025/05/12/note38/">软件设计师 知识点拾遗 2023年上半年</a></li></ul>]]></content>
    
    
    <summary type="html">软考中级备考笔记</summary>
    
    
    
    <category term="软考" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/"/>
    
    <category term="软件设计师" scheme="http://example.com/categories/%E8%BD%AF%E8%80%83/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
    
    <category term="软考" scheme="http://example.com/tags/%E8%BD%AF%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>访问Apache服务器时出现“403 Forbidden”的解决方案</title>
    <link href="http://example.com/2025/05/07/md07/"/>
    <id>http://example.com/2025/05/07/md07/</id>
    <published>2025-05-07T03:30:43.000Z</published>
    <updated>2025-05-07T03:35:51.459Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>访问Apache服务器时出现“403 Forbidden”的解决方案</h1><div class="center"><style>.mzvgugfsoinc{}</style><img src="/2025/05/07/md07/md07_pic01.png" class="mzvgugfsoinc"></div><p>在配置Apache服务器时，如果修改了默认的根目录就可能出现被拒绝访问的情况，可以执行以下命令解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">确保目录可读</span><br>sudo chmod 755 /home/rhauser/public_html<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">确保文件可读</span><br>sudo chmod 644 /home/rhauser/public_html/*<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">确保Apache对父目录也有权限</span><br>sudo chmod +x /home /home/rhauser<br></code></pre></td></tr></table></figure><p>成功解决：</p><div class="center"><style>.hqictewhyjsk{}</style><img src="/2025/05/07/md07/md07_pic02.png" class="hqictewhyjsk"></div>]]></content>
    
    
    <summary type="html">该问题一般出现更改了Apache服务器默认地址时</summary>
    
    
    
    <category term="疑难杂症解决方案" scheme="http://example.com/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VMWare扩容虚拟机时“指定的虚拟磁盘需要进行修复”报错的解决方案</title>
    <link href="http://example.com/2025/05/06/md06/"/>
    <id>http://example.com/2025/05/06/md06/</id>
    <published>2025-05-06T14:26:41.000Z</published>
    <updated>2025-05-06T14:31:06.046Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>VMWare扩容虚拟机时“指定的虚拟磁盘需要进行修复”报错的解决方案</h1><p>在Windows命令提示符中依次执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd VMWare安装路径<br><br>vmware-vdiskmanager -R &quot;虚拟磁盘路径&quot;<br></code></pre></td></tr></table></figure><p>以我的安装路径为例：</p><div class="center"><style>.gxoiitxnossl{}</style><img src="/2025/05/06/md06/md06.png" class="gxoiitxnossl"></div><p>当出现提示<code>The virtual disk, 'E:\VIT1204 Ass1 Lab3\Ass1 Lab3.vmdk', was corrupted and has been successfully repaired.</code>即为修复成功。</p>]]></content>
    
    
    <summary type="html">该问题一般出现为虚拟机扩容时</summary>
    
    
    
    <category term="疑难杂症解决方案" scheme="http://example.com/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 dnf命令“conflicting requests”报错的解决方案</title>
    <link href="http://example.com/2025/05/06/md05/"/>
    <id>http://example.com/2025/05/06/md05/</id>
    <published>2025-05-06T11:15:17.000Z</published>
    <updated>2025-05-06T15:39:48.930Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>CentOS 7 dnf命令“conflicting requests”报错的解决方案</h1><h3 id="Reference">Reference</h3><ul><li><a href="https://blog.csdn.net/SerMa/article/details/131226445">centos7升级glibc2.25避坑指南</a></li><li><a href="https://blog.csdn.net/yutenys/article/details/122154162">centos7升级gcc&amp;glibc(踩坑)</a></li></ul><p>笔者在CentOS 7系统中安装Chrome浏览器时使用到了<code>dnf</code>命令来处理其安装包，但是出现了以下报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">错误：<br> 问题: conflicting requests<br>  - nothing provides libc.so.6(GLIBC_2.18)(64bit) needed by google-chrome-stable-136.0.7103.59-1.x86_64<br></code></pre></td></tr></table></figure><p>GLIBC是GNU发布的libc库，即c运行库。GLIBC是linux系统中最底层的api，几乎其它任何运行库都会依赖于GLIBC，而CentOS 7系统中的GLIBC版本为<code>GLIBC_2.17</code>，而报错信息则说明在使用这一命令时需要<code>GLIBC_2.18</code>及以上版本，因此我们需要对GLIBC库进行更新（直接升级到<code>GLIBC_2.31</code>版本）：</p><h3 id="1-基础环境准备">1. 基础环境准备</h3><p>将GLIBC库升级到目标版本需要满足两个基础条件：</p><ul><li>GCC版本为9.X.X及以上</li><li>make版本为4.0.X及以上</li></ul><h4 id="1）make升级">1）make升级</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">检查版本，满足条件可以跳过此步</span><br>make -v<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装依赖</span><br>yum -y install gcc gcc+<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">建立根目录</span><br>mkdir /backup<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载make安装包</span><br>cd /backup<br>wget https://mirrors.aliyun.com/gnu/make/make-4.3.tar.gz<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压压缩包并建立构建目录</span><br>tar -xf make-4.3.tar.gz<br>cd make-4.3<br>mkdir build<br>cd build<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定安装到具体的目录下，此示例表示将make安装到/opt下</span><br>../configure --prefix=/opt/make<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译安装</span><br>make &amp;&amp; make install<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">建立软连接</span><br>ln -sf /opt/make/bin/make /usr/bin/make<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查make版本</span><br>make --version<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">目标输出</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">GNU Make 4.3</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">为 x86_64-pc-linux-gnu 编译</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Copyright (C) 1988-2020 Free Software Foundation, Inc.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本&lt;http://gnu.org/licenses/gpl.html&gt;。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">本软件是自由软件：您可以自由修改和重新发布它。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">在法律允许的范围内没有其他保证。</span><br></code></pre></td></tr></table></figure><h4 id="2）GCC升级">2）GCC升级</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">检查版本，满足条件可以跳过此步</span><br>gcc -v<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装升级依赖</span><br>yum install -y gcc-c++ glibc-devel mpfr-devel libmpc-devel gmp-devel glibc-devel.i686<br>​<br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载gcc9.3.1安装包</span><br>cd /backup<br>wget https://ftp.gnu.org/gnu/gcc/gcc-9.3.0/gcc-9.3.0.tar.gz --no-check-certificate<br>​<br><span class="hljs-meta prompt_"># </span><span class="language-bash">解包并执行编译前的准备</span><br>tar -xf gcc-9.3.0.tar.gz<br>cd gcc-9.3.0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载依赖包</span><br>./contrib/download_prerequisites<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">建立构建目录</span><br>mkdir build<br>cd build<br>​<br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定安装到具体的目录下，此示例表示将make安装到/usr下</span><br>../configure --enable-checking=release --enable-language=c,c++ --disable-multilib --prefix=/usr<br>​<br><span class="hljs-meta prompt_"># </span><span class="language-bash">编译安装</span><br>make -j4 # -j代表编译时的任务数，一般有几个cpu核心就写几，构建速度会更快一些。该步骤执行时间很长！！！大概需要一个半钟头左右。<br>make install<br>​<br><span class="hljs-meta prompt_"># </span><span class="language-bash">7.安装完成后检查gcc版本</span><br>gcc -v<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">目标输出</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用内建 specs。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">COLLECT_GCC=gcc</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-pc-linux-gnu/9.3.0/lto-wrapper</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">目标：x86_64-pc-linux-gnu</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">配置为：../configure --enable-checking=release --enable-language=c,c++ --disable-multilib --prefix=/usr</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">线程模型：posix</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">gcc 版本 9.3.0 (GCC)</span> <br></code></pre></td></tr></table></figure><h3 id="2-升级GLIBC库">2. 升级GLIBC库</h3><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载安装包</span><br>cd /opt<br>wget https://mirrors.aliyun.com/gnu/glibc/glibc-2.31.tar.gz<br><br>tar -zxf glibc-2.31.tar.gz<br>cd glibc-2.31/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查是否满足基本需求</span><br>cat INSTALL | grep -E &quot;newer|later&quot;<br><br>mkdir build<br>cd build<br><br>../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin --disable-sanity-checks --disable-werror<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">一定要有这一步，python2安装会报错</span><br>yum install python3 <br><br>make -j8 # 使用8核编译后速度显著快于-j4<br>make install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解决新启动远程终端时报一个WARNING</span><br>make localedata/install-locales<br></code></pre></td></tr></table></figure><p>如果再升级后仍出现和原先相同的报错，使用强制安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo rpm -ivh --nodeps /tmp/chrome.rpm<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">该问题一般出现使用Linux dnf命令时</summary>
    
    
    
    <category term="疑难杂症解决方案" scheme="http://example.com/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 yum命令“There are no enabled repos”报错的解决方案</title>
    <link href="http://example.com/2025/05/06/md04/"/>
    <id>http://example.com/2025/05/06/md04/</id>
    <published>2025-05-06T07:31:10.000Z</published>
    <updated>2025-05-06T11:46:24.952Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>CentOS 7 yum命令“There are no enabled repos”报错的解决方案</h1><p>当在Linux CentOS当中使用<code>yum</code>命令并出现以下报错时：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">error:There are no enabled repositories in &quot;/etc/yum.repos.d&quot;, &quot;/etc/yum/repos.d&quot;<br></code></pre></td></tr></table></figure><p>并且使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum grouplist<br></code></pre></td></tr></table></figure><p>后出现报错为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">http://mirrors.cloud.aliyuncs.com/centos/7/os/x86_64/repodata/repomd.xml: [Errno 14] HTTP Error 404 - Not Found<br>Trying other mirror.<br></code></pre></td></tr></table></figure><p>这种情况一般就是YUM仓库（repository）的配置问题，导致无法正常解析，需要对YUM仓库进行换源。</p><h3 id="1-备份原yum源">1. 备份原yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br></code></pre></td></tr></table></figure><h3 id="2-下载新的yum源">2. 下载新的yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo<br></code></pre></td></tr></table></figure><h3 id="3-更新配置">3. 更新配置</h3><p>随后运行以下命令更新配置即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum clear all<br>yum makecache<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">该问题一般出现使用Linux yum命令时</summary>
    
    
    
    <category term="疑难杂症解决方案" scheme="http://example.com/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VMWare “Capacity mismatch for disk XXX。”报错的解决方案</title>
    <link href="http://example.com/2025/05/05/md03/"/>
    <id>http://example.com/2025/05/05/md03/</id>
    <published>2025-05-05T12:17:42.000Z</published>
    <updated>2025-05-06T11:46:35.824Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>VMWare “Capacity mismatch for disk XXX。”报错的解决方案</h1><p>笔者在使用<em>VMware Workstation Pro</em>虚拟机环境完成<a href="https://loquattree.xyz/2025/05/05/php02/">课内大作业</a>的过程中需要导入一个老师提供的.ova文件，但是在导入时出现了以下报错：</p><div class="center"><style>.jflhkidyxfpm{}</style><img src="/2025/05/05/md03/md03_pic01.png" class="jflhkidyxfpm"></div><p>以下是解决方案：</p><h3 id="一、解压-ova文件">一、解压.ova文件</h3><p>​​.ova文件​​（Open Virtual Appliance）是一种​​虚拟设备打包格式，因此它实际上是一个压缩包文件，其中包含了以下内容：</p><ul><li>.ovf文件​​（Open Virtualization Format）：描述虚拟机的硬件配置（CPU、内存、网络等）、磁盘信息和其他元数据（XML格式）。</li><li>vmdk/.vhd等磁盘镜像​​：存储虚拟机的操作系统和数据（格式取决于虚拟化平台，如VMware用VMDK，Hyper-V用VHD）。</li><li>​​.mf文件​​（Manifest File）：是虚拟设备中的​​清单文件​​，用于验证文件完整性和确保虚拟机的安全导入。</li></ul><p>但是常见的解压缩工具都无法直接解压.ova文件，因此需要先手动将其后缀改为.zip格式再解压缩即可。解压结果如下图所示：</p><div class="center"><style>.dwsmdjctxlqf{}</style><img src="/2025/05/05/md03/md03_pic02.png" class="dwsmdjctxlqf"></div><h3 id="二、配置-ovf文件">二、配置.ovf文件</h3><p>笔者搜索到的绝大部分解决方案都是将.ovf文件中的虚拟机软件的版本号修改为当前自己使用到的版本号即可，如下图所示：</p><div class="center"><style>.xqhrjxzhunei{}</style><img src="/2025/05/05/md03/md03_pic03.png" class="xqhrjxzhunei"></div><p>可以一试，可能对低版本的VMware Workstation Pro是起效的，但是笔者使用的版本在修改后依旧会报错，因此需要更彻底的更改：</p><h4 id="1-删除“-Disk-ovf-capacity-“18103500800”-ovf-diskId-“vmdisk2”-ovf-fileRef-“file1”-ovf-format-“http-www-vmware-com-interfaces-specifications-vmdk-html-streamOptimized”-vbox-uuid-“bf38c60b-49bd-48c9-9c03-55acfcec0141”-”">1. 删除“&lt;Disk ovf:capacity=“18103500800” ovf:diskId=“vmdisk2” ovf:fileRef=“file1” ovf:format=“<a href="http://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized">http://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized</a>” vbox:uuid=“bf38c60b-49bd-48c9-9c03-55acfcec0141”/&gt;”</h4><p>在.ovf文件的最开始，内容可能不太一致，删除即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">DiskSection</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Info</span>&gt;</span>List of the virtual disks used in the package<span class="hljs-tag">&lt;/<span class="hljs-name">Info</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Disk</span> <span class="hljs-attr">ovf:capacity</span>=<span class="hljs-string">&quot;18103500800&quot;</span> <span class="hljs-attr">ovf:diskId</span>=<span class="hljs-string">&quot;vmdisk2&quot;</span> <span class="hljs-attr">ovf:fileRef</span>=<span class="hljs-string">&quot;file1&quot;</span> <span class="hljs-attr">ovf:format</span>=<span class="hljs-string">&quot;http://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized&quot;</span> <span class="hljs-attr">vbox:uuid</span>=<span class="hljs-string">&quot;bf38c60b-49bd-48c9-9c03-55acfcec0141&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">DiskSection</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-删除“-Image-uuid-“-bf38c60b-49bd-48c9-9c03-55acfcec0141-”-”">2. 删除“&lt;Image uuid=“{bf38c60b-49bd-48c9-9c03-55acfcec0141}”/&gt;”</h4><p>在.ovf文件的最末尾：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">AttachedDevice</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;HardDisk&quot;</span> <span class="hljs-attr">hotpluggable</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">port</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">device</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Image</span> <span class="hljs-attr">uuid</span>=<span class="hljs-string">&quot;&#123;bf38c60b-49bd-48c9-9c03-55acfcec0141&#125;&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">AttachedDevice</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-继续删除">3. 继续删除</h4><p>在文章中间部分，可搜索<code>/disk/vmdisk</code>找到，全部删除：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">Item</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:AddressOnParent</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:AddressOnParent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:Caption</span>&gt;</span>disk2<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:Caption</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:Description</span>&gt;</span>Disk Image<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:Description</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:ElementName</span>&gt;</span>disk2<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:ElementName</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:HostResource</span>&gt;</span>/disk/vmdisk2<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:HostResource</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:InstanceID</span>&gt;</span>9<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:InstanceID</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:Parent</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:Parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">rasd:ResourceType</span>&gt;</span>17<span class="hljs-tag">&lt;/<span class="hljs-name">rasd:ResourceType</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Item</span>&gt;</span><br></code></pre></td></tr></table></figure><p>保存退出即可。</p><h3 id="三、配置-mf文件">三、配置.mf文件</h3><p>随便找一个文件Hash值的在线计算网站，计算出更改后的.ovf文件的SHA1值，并对应地将.mf文件中的值修改即可，不然无法导入.ovf文件：</p><div class="center"><style>.jsulusjfkjic{}</style><img src="/2025/05/05/md03/md03_pic04.png" class="jsulusjfkjic"></div><h3 id="四、导入-ovf文件">四、导入.ovf文件</h3><p>全部完成之后使用VMware Workstation Pro打开修改过后的.ovf文件即可：</p><div class="center"><style>.ehmrfyntnymw{}</style><img src="/2025/05/05/md03/md03_pic05.png" class="ehmrfyntnymw"></div><h2 id="Bingo！">Bingo！</h2>]]></content>
    
    
    <summary type="html">该问题一般出现在ova文件导入环节</summary>
    
    
    
    <category term="疑难杂症解决方案" scheme="http://example.com/categories/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>使用Linux部署Apache服务器</title>
    <link href="http://example.com/2025/05/05/php02/"/>
    <id>http://example.com/2025/05/05/php02/</id>
    <published>2025-05-05T09:27:00.000Z</published>
    <updated>2025-05-08T07:40:58.601Z</updated>
    
    <content type="html"><![CDATA[<style>.center {  width: auto;  display: table;  margin-left: auto;  margin-right: auto;}</style><h1>使用Linux部署Apache服务器</h1><h2 id="要求文档">要求文档</h2><div class="center"><style>.aosnihuhtdwe{}</style><img src="/2025/05/05/php02/php02_pic08.png" class="aosnihuhtdwe"></div><h2 id="Task-1">Task 1</h2><h3 id="一、在虚拟机环境中安装Apache服务器">一、在虚拟机环境中安装Apache服务器</h3><h4 id="1-为虚拟机配置网络环境">1. 为虚拟机配置网络环境</h4><p>对于一个全新的虚拟机环境来说，它是没有网络连接的，因此在安装Apache服务器之前需要先配置其网络环境。</p><h5 id="1）在VMWare当中将虚拟机的网络适配器更改为NAT模式">1）在VMWare当中将虚拟机的网络适配器更改为NAT模式</h5><div class="center"><style>.rpwqhcheacjc{}</style><img src="/2025/05/05/php02/php02_pic01.png" class="rpwqhcheacjc"></div><h5 id="2）修改虚拟机的网络配置信息">2）修改虚拟机的网络配置信息</h5><p>首先在Linux终端中输入命令以查看配置信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/sysconfig/network-scripts/ifcfg-ens33<br></code></pre></td></tr></table></figure><p>结果如下图所示：</p><div class="center"><style>.dcuhdeqelhml{}</style><img src="/2025/05/05/php02/php02_pic02.png" class="dcuhdeqelhml"></div><p>将其中的<code>ONBOOT=no</code>更改为<code>ONBOOT=yes</code>以启用ens33端口。</p><p>随后在重启网络配置之后输入<code>ifconfig</code>命令以查看虚拟机IP地址信息：</p><div class="center"><style>.dchiqjkpnwbl{}</style><img src="/2025/05/05/php02/php02_pic03.png" class="dchiqjkpnwbl"></div><p>记录其中ens33端口对应的IP地址，并将其添加到<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code>文件当中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">在源文件内容下新增：</span><br>GATEWAY= # 输入记录下来的IP地址<br>DNS1=114.114.114.114<br></code></pre></td></tr></table></figure><p>随后继续输入命令修改配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/resolv.conf<br></code></pre></td></tr></table></figure><p>将其中<code>nameserver</code>一行的值替换为<code>114.114.114.114</code>。</p><p>重启网络后成功ping通，网络环境配置完毕：</p><div class="center"><style>.nobbbtxzjfhq{}</style><img src="/2025/05/05/php02/php02_pic04.png" class="nobbbtxzjfhq"></div><h4 id="2-更新安装包">2. 更新安装包</h4><p>使用以下命令更新所有已安装的包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum update<br>sudo yum install tree<br></code></pre></td></tr></table></figure><p><em>注：如有需要请参见<a href="https://loquattree.xyz/2025/05/06/md04/">CentOS yum命令“There are no enabled repos”报错的解决方案</a></em></p><h4 id="3-安装Apache服务器">3. 安装Apache服务器</h4><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装并启用Apache服务器软件</span><br>sudo yum install -y httpd httpd-tools mod_ssl<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启用并启动服务器</span><br>sudo systemctl enable httpd<br>sudo systemctl start httpd<br></code></pre></td></tr></table></figure><h4 id="4-检查配置结果">4. 检查配置结果</h4><h5 id="1）在Linux中安装chrome浏览器">1）在Linux中安装chrome浏览器</h5><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -O /tmp/chrome.rpm https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm<br><br>su -<br><br>dnf localinstall /tmp/chrome.rpm<br></code></pre></td></tr></table></figure><p><em>注：如有需要请参见<a href="https://loquattree.xyz/2025/05/06/md05/">CentOS 7 dnf命令“conflicting requests”报错的解决方案</a></em></p><p>安装成功后如下图所示：</p><div class="center"><style>.khkfscjiqlpd{}</style><img src="/2025/05/05/php02/php02_pic05.png" class="khkfscjiqlpd"></div><h5 id="2）使用chrome浏览器检查配置结果">2）使用chrome浏览器检查配置结果</h5><p>执行以下命令以修改Apache配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nano /etc/httpd/conf/httpd.conf<br></code></pre></td></tr></table></figure><p>使用Crtl+w检索<code>SeverName</code>，如下图所示添加<code>ServerName localhost:80</code>：</p><div class="center"><style>.xeejrkfgdywk{}</style><img src="/2025/05/05/php02/php02_pic06.png" class="xeejrkfgdywk"></div><p>保存并退出文件后继续执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">重启服务</span><br>sudo systemctl stop httpd<br>sudo systemctl restart httpd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">切换到指定目录</span><br>cd /var/www/html<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建index页，在其中输入任意内容即可</span><br>sudo nano index.html<br></code></pre></td></tr></table></figure><div class="center"><style>.wyalswqbuvhv{}</style><img src="/2025/05/05/php02/php02_pic07.png" class="wyalswqbuvhv"></div><h3 id="二、在虚拟机环境中安装PHP服务器">二、在虚拟机环境中安装PHP服务器</h3><h4 id="1-安装PHP服务器">1. 安装PHP服务器</h4><p>依次执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum clean metadata<br><br>sudo yum install php-cli php-pdo php-fpm php-mysqlnd<br>sudo yum install php php-&#123;pear,cgi,common,curl,mbstring,gd,mysqlnd,gettext,bcmath,json,xml,fpm,intl,zip,imap&#125;<br></code></pre></td></tr></table></figure><h4 id="2-检查配置结果">2. 检查配置结果</h4><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /var/www/html<br><br>sudo mv index.html index.php<br><br>sudo nano /etc/httpd/conf/httpd.conf # 检索“DirectoryIndex”，在index.html同一行中继续添加index.php<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启服务</span><br>sudo systemctl stop httpd<br>sudo systemctl restart httpd<br></code></pre></td></tr></table></figure><p>随后在浏览器中输入<code>localhost/index.php</code>检查结果，如果有正常显示即为配置成功。</p><h2 id="Task-2">Task 2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建存放目录</span><br>cd ~<br>mkdir public_html<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改主配置文件</span><br>sudo vim /etc/httpd/conf/httpd.conf<br></code></pre></td></tr></table></figure><div class="center"><style>.knoytqvfykaj{}</style><img src="/2025/05/05/php02/php02_pic09.png" class="knoytqvfykaj"></div><p>将第<code>120</code>, <code>125</code>和<code>131</code>中的地址都改为自定义地址<code>/home/rhauser/public_html</code>并重新启动Apache服务器即可。</p><p><em>注：如有需要请参见<a href="https://loquattree.xyz/2025/05/07/md07/">访问Apache服务器时出现“403 Forbidden”的解决方案</a></em></p><p>随后在<code>public_html</code>文件夹中创建一个<code>index.php</code>文件和一个空文件夹<code>sub_test</code>，将要求的模板写入<code>index.php</code>文件后保存退出。此时打开该文件和该文件夹的效果应该如下所示：</p><div class="center"><style>.jcldrcqpwjjs{}</style><img src="/2025/05/05/php02/php02_pic10.png" class="jcldrcqpwjjs"></div><div class="center"><style>.mrifocalpmbv{}</style><img src="/2025/05/05/php02/php02_pic11.png" class="mrifocalpmbv"></div><h2 id="Task-3">Task 3</h2><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mkdir -p /home/rhauser/public_html/secure/development/restricted # -p确保自动创建父级目录<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">进入受限文件夹并创建目标文件</span><br>cd /home/rhauser/public_html/secure/development/restricted<br>sudo nano index.php<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">在index.php中写入以下内容</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;!DOCTYPE html&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;html&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;<span class="hljs-built_in">head</span>&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;title&gt;Example site name&lt;/title&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;/head&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;body&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;h1&gt;You are visiting the restricted area!!!&lt;/h1&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;br&gt;&lt;br&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;!-- Any other links goes here --&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;br&gt;&lt;br&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;pre&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Current Directory: &lt;?= <span class="hljs-built_in">dirname</span>(__FILE__) ?&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;/pre&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改Apache配置文件</span><br>sudo vim /etc/httpd/conf/httpd.conf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">目标样式：</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-comment"># 建立虚拟路径和物理路径之间的映射</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Alias /restricted /home/rhauser/public_html/secure/development/restricted</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;Directory <span class="hljs-string">&quot;/home/rhauser/public_html&quot;</span>&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">    Options Indexes FollowSymLinks</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">    AllowOverride None</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">    Require all granted</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;/Directory&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">检查语法是否正确并重启服务</span><br>sudo apachectl configtest  <br>sudo systemctl restart httpd<br></code></pre></td></tr></table></figure><p>完成后访问限制路径内的索引页的效果如下图所示：</p><div class="center"><style>.ovzkojkwhxmx{}</style><img src="/2025/05/05/php02/php02_pic12.png" class="ovzkojkwhxmx"></div><h2 id="Task-4">Task 4</h2><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">首先需要确认主配置允许使用 .htaccess 文件：</span><br>sudo vim /etc/httpd/conf/httpd.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">在 /etc/httpd/conf/httpd.conf 中找到对应目录配置</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;Directory <span class="hljs-string">&quot;/var/www/html&quot;</span>&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">    AllowOverride AuthConfig</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">    <span class="hljs-comment"># 其他配置...</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;/Directory&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建密码文件并添加第一个用户Alice</span><br>sudo htpasswd -c /etc/httpd/.htpasswd Alice # 系统会提示输入密码，输入&quot;redhat&quot;并确认<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加第二个用户Bob</span><br>sudo htpasswd /etc/httpd/.htpasswd Bob # 同样输入密码&quot;redhat&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置适当权限</span><br>sudo chown apache:apache /etc/httpd/.htpasswd<br>sudo chmod 640 /etc/httpd/.htpasswd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建 .htaccess 文件</span><br>sudo vim /home/rhauser/public_html/secure/development/restricted/.htaccess<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件内容如下：</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AuthType Basic</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AuthName <span class="hljs-string">&quot;Restricted Area&quot;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AuthUserFile /etc/httpd/.htpasswd</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Require valid-user</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br></code></pre></td></tr></table></figure><p>完成后就能实现访问限制区域后需要登录的效果：</p><div class="center"><style>.npkiyjnxptet{}</style><img src="/2025/05/05/php02/php02_pic13.png" class="npkiyjnxptet"></div><p>登录后就能收到访问限制提示：</p><div class="center"><style>.wpgdlvxydlgn{}</style><img src="/2025/05/05/php02/php02_pic14.png" class="wpgdlvxydlgn"></div><h2 id="Task-5">Task 5</h2><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新用户并设置密码</span><br>sudo useradd -m sxxxxxxx<br>echo &quot;redhat&quot; | sudo passwd --stdin sxxxxxxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">将新用户添加到sudoers当中</span><br>su -<br>sudo usermod -aG wheel sxxxxxxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新的目录</span><br>sudo -u sxxxxxxx mkdir /home/sxxxxxxx/public_html<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新的php文件</span><br>sudo su - sxxxxxxx<br>sudo vim ~/public_html/index.php<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件内容如下：</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">----------------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;!DOCTYPE html&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;html&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;<span class="hljs-built_in">head</span>&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;title&gt;Example site name&lt;/title&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;/head&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;body&gt;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">&lt;h1&gt;Welcome to S8118532<span class="hljs-string">&#x27;s Page!!&lt;/h1&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;br&gt;&lt;br&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;!-- Any other links goes here --&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;br&gt;&lt;br&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;pre&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">Current Directory: &lt;?= dirname(__FILE__) ?&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;/pre&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">----------------------------</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">启用用户目录模块</span></span><br>sudo sed -i &#x27;s/^#UserDir public_html/UserDir public_html/&#x27; /etc/httpd/conf.d/userdir.conf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">设置目录权限</span></span><br>sudo chmod 711 /home/sxxxxxxx<br>sudo chmod 755 /home/sxxxxxxx/public_html<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">启用用户目录功能</span></span><br>sudo nano /etc/httpd/conf.d/userdir.conf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">文件内容修改如下：</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">----------------------------</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;IfModule mod_userdir.c&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    # 注释掉禁用行，启用用户目录功能</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    #UserDir disabled</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    UserDir public_html</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    UserDir disabled root  # 禁止root用户使用此功能</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;/IfModule&gt;</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;Directory &quot;/home/*/public_html&quot;&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    AllowOverride FileInfo AuthConfig Limit Indexes</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">    Require method GET POST OPTIONS</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&lt;/Directory&gt;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">----------------------------</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">重启Apache</span></span><br>sudo systemctl restart httpd<br>sudo systemctl enable httpd<br></code></pre></td></tr></table></figure><p>最终效果如下所示：</p><div class="center"><style>.bhfhqoxvfkak{}</style><img src="/2025/05/05/php02/php02_pic15.png" class="bhfhqoxvfkak"></div><h2 id="Task-6">Task 6</h2><p>执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建错误页目录及文件</span><br>mkdir -p /home/rhauser/public_html/error<br>vi /home/rhauser/public_html/error/403.php<br>vi /home/rhauser/public_html/error/404.php<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置权限（确保Apache用户可读）</span><br>chmod 755 /home/rhauser/public_html/error<br>chmod 644 /home/rhauser/public_html/error/*.php<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改Apache配置</span><br>sudo vi /etc/httpd/conf/httpd.conf<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">---------------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">在配置文件中 ​​全局或对应&lt;VirtualHost&gt;段​​ 添加：</span><br>ErrorDocument 403 /error/403.php # 路径 /error/... 是相对于DocumentRoot的，无需写绝对路径<br>ErrorDocument 404 /error/404.php # 这里我输入的内容是“This is a diy 404 page!!”<br><span class="hljs-meta prompt_"># </span><span class="language-bash">---------------------</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改限制目录的权限</span><br>chmod 611 /home/rhauser/public_html/secure/development/restricted<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启Apache服务器</span><br>sudo systemctl restart httpd<br></code></pre></td></tr></table></figure><p>完成后，访问一个不存在的页面，例如<code>localhost/notfound</code>页面，打开的效果如下图所示：</p><div class="center"><style>.imprrlqsrpqb{}</style><img src="/2025/05/05/php02/php02_pic16.png" class="imprrlqsrpqb"></div>]]></content>
    
    
    <summary type="html">VIT1024 Ass01 Lab3实现小结</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PHP" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/PHP/"/>
    
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
  </entry>
  
</feed>
